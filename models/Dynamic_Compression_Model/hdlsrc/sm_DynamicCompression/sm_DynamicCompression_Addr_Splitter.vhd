-- -------------------------------------------------------------
-- 
-- File Name: /home/cb54103/Documents/fpga-open-speech-tools/simulink_models/models/Dynamic_Compression_Model/hdlsrc/sm_DynamicCompression/sm_DynamicCompression_Addr_Splitter.vhd
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: sm_DynamicCompression_Addr_Splitter
-- Source Path: sm_DynamicCompression/dataplane/Avalon Data Processing/Left Channel Processing/recalculate/Nchan_FbankAGC_AID/Addr_Splitter
-- Hierarchy Level: 5
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY sm_DynamicCompression_Addr_Splitter IS
  PORT( Register_Addr                     :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
        Addr                              :   OUT   std_logic_vector(8 DOWNTO 0);  -- ufix9
        Sel                               :   OUT   std_logic_vector(2 DOWNTO 0)  -- ufix3
        );
END sm_DynamicCompression_Addr_Splitter;


ARCHITECTURE rtl OF sm_DynamicCompression_Addr_Splitter IS

  -- Signals
  SIGNAL Register_Addr_signed             : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Data_Type_Conversion_out1        : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Bit_Slice_out1                   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Constant1_out1                   : std_logic;
  SIGNAL Constant_out1                    : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL top3Bits                         : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Switch_out1                      : unsigned(2 DOWNTO 0);  -- ufix3

BEGIN
  -- Figure out where 7+ comes from
  -- 
  -- Addr line contains the local address bits: 0-2^(3+M_bits) -1
  -- 
  -- Select Line is 000 to 100, if 101 or greater, don't write to any of these blocks

  Register_Addr_signed <= signed(Register_Addr);

  Data_Type_Conversion_out1 <= unsigned(resize(Register_Addr_signed(31 DOWNTO 28), 12));

  -- 
  Bit_Slice_out1 <= Data_Type_Conversion_out1(8 DOWNTO 0);

  Addr <= std_logic_vector(Bit_Slice_out1);

  Constant1_out1 <= '0';

  Constant_out1 <= to_unsigned(16#5#, 3);

  -- 
  top3Bits <= Data_Type_Conversion_out1(11 DOWNTO 9);

  
  Switch_out1 <= Constant_out1 WHEN Constant1_out1 = '0' ELSE
      top3Bits;

  Sel <= std_logic_vector(Switch_out1);

END rtl;

