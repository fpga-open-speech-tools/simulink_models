-- -------------------------------------------------------------
-- 
-- File Name: /home/cb54103/Documents/fpga-open-speech-tools/simulink_models/models/Dynamic_Compression_Model/hdlsrc/sm_DynamicCompression/sm_DynamicCompression_Left_Channel_Processing.vhd
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: sm_DynamicCompression_Left_Channel_Processing
-- Source Path: sm_DynamicCompression/dataplane/Avalon Data Processing/Left Channel Processing
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.sm_DynamicCompression_dataplane_pkg.ALL;

ENTITY sm_DynamicCompression_Left_Channel_Processing IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_1024_0                      :   IN    std_logic;
        enb                               :   IN    std_logic;
        enb_1_1024_5                      :   IN    std_logic;
        Left_Data_In                      :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
        Register_System_Enable            :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
        Register_Preset_Sel               :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
        Valid_in                          :   IN    std_logic;
        Left_Data_Out                     :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En28
        );
END sm_DynamicCompression_Left_Channel_Processing;


ARCHITECTURE rtl OF sm_DynamicCompression_Left_Channel_Processing IS

  -- Component Declarations
  COMPONENT sm_DynamicCompression_recalculate
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_1024_0                    :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1_1024_5                    :   IN    std_logic;
          Register_Data                   :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
          Register_Addr                   :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
          sig                             :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
          Valid_in                        :   IN    std_logic;
          proc_sig                        :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En28
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : sm_DynamicCompression_recalculate
    USE ENTITY work.sm_DynamicCompression_recalculate(rtl);

  -- Signals
  SIGNAL Register_System_Enable_signed    : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL delayMatch_reg                   : vector_of_signed32(0 TO 2049);  -- sfix32 [2050]
  SIGNAL Register_System_Enable_1         : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL Left_Data_In_signed              : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL delayMatch1_reg                  : vector_of_signed32(0 TO 2049);  -- sfix32 [2050]
  SIGNAL Left_Data_In_1                   : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL recalculate_out1                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL recalculate_out1_signed          : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Switch_out1                      : signed(31 DOWNTO 0);  -- sfix32_En28

BEGIN
  -- Put in a check here if we make L/R channels have different tables

  u_recalculate : sm_DynamicCompression_recalculate
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_1024_0 => enb_1_1024_0,
              enb => enb,
              enb_1_1024_5 => enb_1_1024_5,
              Register_Data => Register_System_Enable,  -- sfix32_En28
              Register_Addr => Register_Preset_Sel,  -- sfix32_En28
              sig => Left_Data_In,  -- sfix32_En28
              Valid_in => Valid_in,
              proc_sig => recalculate_out1  -- sfix32_En28
              );

  Register_System_Enable_signed <= signed(Register_System_Enable);

  delayMatch_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch_reg <= (OTHERS => to_signed(0, 32));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        delayMatch_reg(0) <= Register_System_Enable_signed;
        delayMatch_reg(1 TO 2049) <= delayMatch_reg(0 TO 2048);
      END IF;
    END IF;
  END PROCESS delayMatch_process;

  Register_System_Enable_1 <= delayMatch_reg(2049);

  
  switch_compare_1 <= '1' WHEN Register_System_Enable_1 >= to_signed(0, 32) ELSE
      '0';

  Left_Data_In_signed <= signed(Left_Data_In);

  delayMatch1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch1_reg <= (OTHERS => to_signed(0, 32));
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        delayMatch1_reg(0) <= Left_Data_In_signed;
        delayMatch1_reg(1 TO 2049) <= delayMatch1_reg(0 TO 2048);
      END IF;
    END IF;
  END PROCESS delayMatch1_process;

  Left_Data_In_1 <= delayMatch1_reg(2049);

  recalculate_out1_signed <= signed(recalculate_out1);

  
  Switch_out1 <= Left_Data_In_1 WHEN switch_compare_1 = '0' ELSE
      recalculate_out1_signed;

  Left_Data_Out <= std_logic_vector(Switch_out1);

END rtl;

