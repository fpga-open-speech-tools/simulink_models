[
 {
  "sid":"sm_DynamicCompression:5824",
  "className":"Simulink.Annotation",
  "icon":"sm_DynamicCompression_2332",
  "name":"EFFECTIVELY shift_left(x_in,NShifts)",
  "label":"EFFECTIVELY shift_left(x_in,NShifts)",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "Text",
    "DropShadow",
    "Interpreter",
    "FontName",
    "FontWeight",
    "FontSize",
    "FontAngle",
    "ForegroundColor",
    "BackgroundColor",
    "HorizontalAlignment",
    "UseDisplayTextAsClickCallback",
    "ClickFcn"
   ],
   "values":[
    "EFFECTIVELY shift_left(x_in,NShifts)",
    "off",
    "off",
    "auto",
    "auto",
    -1,
    "auto",
    "black",
    "white",
    "left",
    "off",
    ""
   ],
   "tabs":[
   ],
   "tabs_idx":[
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5825",
  "className":"Simulink.Annotation",
  "icon":"sm_DynamicCompression_2332",
  "name":"Have to change size by 8 because LZC made for 40 bit number",
  "label":"Have to change size by 8 because LZC made for 40 bit number",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "Text",
    "DropShadow",
    "Interpreter",
    "FontName",
    "FontWeight",
    "FontSize",
    "FontAngle",
    "ForegroundColor",
    "BackgroundColor",
    "HorizontalAlignment",
    "UseDisplayTextAsClickCallback",
    "ClickFcn"
   ],
   "values":[
    "Have to change size by 8 because LZC made for 40 bit number",
    "off",
    "off",
    "auto",
    "auto",
    -1,
    "auto",
    "black",
    "white",
    "left",
    "off",
    ""
   ],
   "tabs":[
   ],
   "tabs_idx":[
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5826",
  "className":"Simulink.Annotation",
  "icon":"sm_DynamicCompression_2332",
  "name":"Note: simulation version of this block has no latency.  But, in VHDL the inputs are registered, delaying the signal by 1. ",
  "label":"Note: simulation version of this block has no latency.  But, in VHDL the inputs are registered, delaying the signal by 1. ",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "Text",
    "DropShadow",
    "Interpreter",
    "FontName",
    "FontWeight",
    "FontSize",
    "FontAngle",
    "ForegroundColor",
    "BackgroundColor",
    "HorizontalAlignment",
    "UseDisplayTextAsClickCallback",
    "ClickFcn"
   ],
   "values":[
    "Note: simulation version of this block has no latency. \nBut, in VHDL the inputs are registered, delaying the signal by 1. ",
    "off",
    "off",
    "auto",
    "auto",
    -1,
    "auto",
    "black",
    "white",
    "left",
    "off",
    ""
   ],
   "tabs":[
   ],
   "tabs_idx":[
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5584",
  "className":"Bit Concat",
  "icon":"sm_DynamicCompression_2333",
  "name":"Bit Concat",
  "label":"Bit Concat",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "numInputs"
   ],
   "values":[
    "2"
   ],
   "tabs":[
   ],
   "tabs_idx":[
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ContainerHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"SubSystem",
   "masktype":"Bit Concat"
  }
 },
 {
  "sid":"sm_DynamicCompression:5585",
  "className":"Bit Slice",
  "icon":"sm_DynamicCompression_2333",
  "name":"Bit Slice",
  "label":"Bit Slice",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "lidx",
    "ridx"
   ],
   "values":[
    "3",
    "0"
   ],
   "tabs":[
   ],
   "tabs_idx":[
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ContainerHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"SubSystem",
   "masktype":"Bit Slice"
  }
 },
 {
  "sid":"sm_DynamicCompression:5716",
  "className":"Simulink.Sum",
  "icon":"sm_DynamicCompression_2333",
  "name":"Subtract",
  "label":"Subtract",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "IconShape",
    "Inputs",
    "InputSameDT",
    "AccumDataTypeStr",
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "RndMeth",
    "SaturateOnIntegerOverflow",
    "CollapseDim",
    "CollapseMode",
    "SampleTime"
   ],
   "values":[
    "rectangular",
    "+-",
    "off",
    "Inherit: Same as first input",
    "[]",
    "[]",
    "Inherit: Same as first input",
    "off",
    "Floor",
    "off",
    "1",
    "All dimensions",
    "-1"
   ],
   "tabs":[
    "Main",
    "Signal Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    2,
    10
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"Sum",
   "masktype":""
  }
 },
 {
  "sid":"sm_DynamicCompression:5589",
  "className":"Simulink.Constant",
  "icon":"sm_DynamicCompression_2333",
  "name":"Constant1",
  "label":"Constant1",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "Value",
    "VectorParams1D",
    "SampleTime",
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "FramePeriod"
   ],
   "values":[
    "W_bits-1-F_bits",
    "on",
    "-1",
    "[]",
    "[]",
    "fixdt(0,6,0)",
    "off",
    "inf"
   ],
   "tabs":[
    "Main",
    "Signal Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    3,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"Constant",
   "masktype":""
  }
 },
 {
  "sid":"sm_DynamicCompression:5593",
  "className":"Simulink.Delay",
  "icon":"sm_DynamicCompression_2333",
  "name":"Delay2",
  "label":"Delay2",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "DelayLengthSource",
    "InitialConditionSource",
    "DelayLength",
    "InitialCondition",
    "InputProcessing",
    "UseCircularBuffer",
    "ShowEnablePort",
    "ExternalReset",
    "SampleTime",
    "StateName",
    "StateMustResolveToSignalObject",
    "StateSignalObjectClass",
    "StateStorageClass",
    "CodeGenStateStorageTypeQualifier",
    "DelayLengthUpperLimit",
    "DiagnosticForDelayLength",
    "PreventDirectFeedthrough",
    "RemoveDelayLengthCheckInGeneratedCode",
    "StateSignalObject"
   ],
   "values":[
    "Dialog",
    "Dialog",
    "1",
    "0.0",
    "Elements as channels (sample based)",
    "off",
    "off",
    "None",
    "-1",
    "",
    "off",
    "Simulink.Signal",
    "Auto",
    "",
    "100",
    "None",
    "off",
    "off",
    [
    ]
   ],
   "tabs":[
    "Main",
    "State Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    9,
    13
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"Delay",
   "masktype":""
  }
 },
 {
  "sid":"sm_DynamicCompression:5587",
  "className":"Simulink.SFunction",
  "icon":"sm_DynamicCompression_2333",
  "name":"Bitwise Operator1",
  "label":"Bitwise Operator1",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "logicop",
    "UseBitMask",
    "NumInputPorts",
    "BitMask",
    "BitMaskRealWorld"
   ],
   "values":[
    "NOT",
    "off",
    "1",
    "bin2dec('11011001')",
    "Stored Integer"
   ],
   "tabs":[
   ],
   "tabs_idx":[
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"S-Function",
   "masktype":"Bitwise Operator"
  }
 },
 {
  "sid":"sm_DynamicCompression:5586",
  "className":"Bit Slice",
  "icon":"sm_DynamicCompression_2333",
  "name":"Bit Slice1",
  "label":"Bit Slice1",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "lidx",
    "ridx"
   ],
   "values":[
    "F_bits-1",
    "F_bits-M_bits"
   ],
   "tabs":[
   ],
   "tabs_idx":[
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ContainerHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"SubSystem",
   "masktype":"Bit Slice"
  }
 },
 {
  "sid":"sm_DynamicCompression:5583",
  "className":"Simulink.Inport",
  "icon":"sm_DynamicCompression_2333",
  "name":"x_in",
  "label":"x_in",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "Port",
    "IconDisplay",
    "LatchByDelayingOutsideSignal",
    "LatchInputForFeedbackSignals",
    "OutputFunctionCall",
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "Unit",
    "PortDimensions",
    "VarSizeSig",
    "SampleTime",
    "SignalType",
    "BusOutputAsStruct",
    "InputConnect",
    "Interpolate"
   ],
   "values":[
    "1",
    "Port number",
    "off",
    "off",
    "off",
    "[]",
    "[]",
    "Inherit: auto",
    "off",
    "inherit",
    "-1",
    "Inherit",
    "-1",
    "auto",
    "off",
    "",
    "on"
   ],
   "tabs":[
    "Main",
    "Signal Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    4,
    14
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"Inport",
   "masktype":""
  }
 },
 {
  "sid":"sm_DynamicCompression:5823",
  "className":"Simulink.Outport",
  "icon":"sm_DynamicCompression_2333",
  "name":"addr_r",
  "label":"addr_r",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "Port",
    "IconDisplay",
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "Unit",
    "PortDimensions",
    "VarSizeSig",
    "SampleTime",
    "SignalType",
    "BusOutputAsStruct",
    "EnsureOutportIsVirtual",
    "InitialOutput",
    "MustResolveToSignalObject",
    "OutputWhenDisabled",
    "OutputWhenUnConnected",
    "OutputWhenUnconnectedValue",
    "SignalName",
    "SignalObject",
    "SourceOfInitialOutputValue",
    "StorageClass",
    "VectorParamsAs1DForOutWhenUnconnected"
   ],
   "values":[
    "1",
    "Port number",
    "[]",
    "[]",
    "Inherit: auto",
    "off",
    "inherit",
    "-1",
    "Inherit",
    "-1",
    "auto",
    "off",
    "off",
    "[]",
    "off",
    "held",
    "off",
    "0",
    "",
    [
    ],
    "Dialog",
    "Auto",
    "off"
   ],
   "tabs":[
    "Main",
    "Signal Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    2,
    11
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"Outport",
   "masktype":""
  }
 },
 {
  "sid":"sm_DynamicCompression:5591",
  "className":"Simulink.DataTypeConversion",
  "icon":"sm_DynamicCompression_2333",
  "name":"Data Type Conversion",
  "label":"Data Type Conversion",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "ConvertRealWorld",
    "RndMeth",
    "SaturateOnIntegerOverflow",
    "SampleTime"
   ],
   "values":[
    "[]",
    "[]",
    "fixdt(0,W_bits+8,F_bits+8)",
    "off",
    "Real World Value (RWV)",
    "Floor",
    "off",
    "-1"
   ],
   "tabs":[
    "Parameter Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"DataTypeConversion",
   "masktype":""
  }
 },
 {
  "sid":"sm_DynamicCompression:5594",
  "className":"Simulink.SubSystem",
  "icon":"sm_DynamicCompression_2331",
  "name":"LSL(N)",
  "label":"LSL(N)",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "ShowPortLabels",
    "Permissions",
    "ErrorFcn",
    "PermitHierarchicalResolution",
    "TreatAsAtomicUnit",
    "MinAlgLoopOccurrences",
    "SystemSampleTime",
    "TreatAsGroupedWhenPropagatingVariantConditions",
    "RTWSystemCode",
    "ReferencedSubsystem",
    "AllowZeroVariantControls",
    "AutoFrameSizeCalculation",
    "BlockChoice",
    "CompiledActiveChoiceBlock",
    "CompiledActiveChoiceControl",
    "ExecutionDomainType",
    "FunctionInterfaceSpec",
    "FunctionWithSeparateData",
    "GeneratePreprocessorConditionals",
    "IsSubsystemVirtual",
    "LabelModeActiveChoice",
    "Latency",
    "MemberBlocks",
    "PartitionName",
    "PropExecContextOutsideSubsystem",
    "PropagateVariantConditions",
    "RTWFcnName",
    "RTWFcnNameOpts",
    "RTWFileName",
    "RTWFileNameOpts",
    "RTWMemSecDataConstants",
    "RTWMemSecDataInternal",
    "RTWMemSecDataParameters",
    "RTWMemSecFuncExecute",
    "RTWMemSecFuncInitTerm",
    "ScheduleAs",
    "SetExecutionDomain",
    "TemplateBlock",
    "Variant",
    "VariantControl",
    "VariantControlMode"
   ],
   "values":[
    "FromPortIcon",
    "ReadWrite",
    "",
    "All",
    "off",
    "off",
    "-1",
    "on",
    "Auto",
    "",
    "off",
    "off",
    "",
    "",
    "",
    "Deduce",
    "void_void",
    "off",
    "off",
    "on",
    "",
    "0",
    "",
    "",
    "off",
    "off",
    "",
    "Auto",
    "",
    "Auto",
    "Inherit from model",
    "Inherit from model",
    "Inherit from model",
    "Inherit from model",
    "Inherit from model",
    "Sample time",
    "off",
    "",
    "off",
    "",
    "Expression"
   ],
   "tabs":[
    "Main",
    "Code Generation",
    "Subsystem Reference",
    "-Other"
   ],
   "tabs_idx":[
    0,
    8,
    9,
    10
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ContainerHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"SubSystem",
   "masktype":""
  }
 },
 {
  "sid":"sm_DynamicCompression:5588",
  "className":"Compare To Constant",
  "icon":"sm_DynamicCompression_2333",
  "name":"Compare To Constant1",
  "label":"Compare To Constant1",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "relop",
    "const",
    "OutDataTypeStr",
    "ZeroCross"
   ],
   "values":[
    ">",
    "15",
    "boolean",
    "on"
   ],
   "tabs":[
   ],
   "tabs_idx":[
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ContainerHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"SubSystem",
   "masktype":"Compare To Constant"
  }
 },
 {
  "sid":"sm_DynamicCompression:5717",
  "className":"Simulink.Switch",
  "icon":"sm_DynamicCompression_2333",
  "name":"Switch1",
  "label":"Switch1",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "Criteria",
    "Threshold",
    "ZeroCross",
    "InputSameDT",
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "RndMeth",
    "SaturateOnIntegerOverflow",
    "AllowDiffInputSizes",
    "SampleTime"
   ],
   "values":[
    "u2 ~= 0",
    "0",
    "on",
    "off",
    "[]",
    "[]",
    "Inherit: Inherit via internal rule",
    "off",
    "Floor",
    "off",
    "off",
    "-1"
   ],
   "tabs":[
    "Main",
    "Signal Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    3,
    11
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"Switch",
   "masktype":""
  }
 },
 {
  "sid":"sm_DynamicCompression:5590",
  "className":"Simulink.Constant",
  "icon":"sm_DynamicCompression_2333",
  "name":"Constant6",
  "label":"Constant6",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "Value",
    "VectorParams1D",
    "SampleTime",
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "FramePeriod"
   ],
   "values":[
    "0",
    "on",
    "-1",
    "[]",
    "[]",
    "fixdt(0,9,0)",
    "off",
    "inf"
   ],
   "tabs":[
    "Main",
    "Signal Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    3,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"Constant",
   "masktype":""
  }
 },
 {
  "sid":"sm_DynamicCompression:5715",
  "className":"Simulink.SubSystem",
  "icon":"sm_DynamicCompression_2337",
  "name":"MATLAB Function",
  "label":"MATLAB Function",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "ShowPortLabels",
    "Permissions",
    "ErrorFcn",
    "PermitHierarchicalResolution",
    "TreatAsAtomicUnit",
    "MinAlgLoopOccurrences",
    "SystemSampleTime",
    "TreatAsGroupedWhenPropagatingVariantConditions",
    "RTWSystemCode",
    "ReferencedSubsystem",
    "AllowZeroVariantControls",
    "AutoFrameSizeCalculation",
    "BlockChoice",
    "CompiledActiveChoiceBlock",
    "CompiledActiveChoiceControl",
    "ExecutionDomainType",
    "FunctionInterfaceSpec",
    "FunctionWithSeparateData",
    "GeneratePreprocessorConditionals",
    "IsSubsystemVirtual",
    "LabelModeActiveChoice",
    "Latency",
    "MemberBlocks",
    "PartitionName",
    "PropExecContextOutsideSubsystem",
    "PropagateVariantConditions",
    "RTWFcnName",
    "RTWFcnNameOpts",
    "RTWFileName",
    "RTWFileNameOpts",
    "RTWMemSecDataConstants",
    "RTWMemSecDataInternal",
    "RTWMemSecDataParameters",
    "RTWMemSecFuncExecute",
    "RTWMemSecFuncInitTerm",
    "ScheduleAs",
    "SetExecutionDomain",
    "TemplateBlock",
    "Variant",
    "VariantControl",
    "VariantControlMode"
   ],
   "values":[
    "FromPortIcon",
    "ReadWrite",
    "Stateflow.Translate.translate",
    "ExplicitOnly",
    "on",
    "off",
    "-1",
    "on",
    "Auto",
    "",
    "off",
    "off",
    "",
    "",
    "",
    "Deduce",
    "void_void",
    "off",
    "off",
    "off",
    "",
    "0",
    "",
    "",
    "off",
    "off",
    "",
    "Auto",
    "",
    "Auto",
    "Inherit from model",
    "Inherit from model",
    "Inherit from model",
    "Inherit from model",
    "Inherit from model",
    "Sample time",
    "off",
    "",
    "off",
    "",
    "Expression"
   ],
   "tabs":[
    "Main",
    "Code Generation",
    "Subsystem Reference",
    "-Other"
   ],
   "tabs_idx":[
    0,
    8,
    9,
    10
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":{
   "code":"function lzc_count = fcn(x)\n%#codegen\n\n% -- Binary Bisection Tree (Divide & Conquer)\nif bitorreduce(x, 40, 21) == 1 %       if ((b39 or b38 or b37 or b36 or b35 or b34 or b33 or b32 or b31 or b30 or b29 or b28 or b27 or b26 or b25 or b24 or b23 or b22 or b21 or b20) = '1') then   -- check bit range [39  20]\n    if bitorreduce(x, 40, 31) == 1%             if ((b39 or b38 or b37 or b36 or b35 or b34 or b33 or b32 or b31 or b30) = '1') then   -- check bit range [39  30]\n        if bitorreduce(x, 40, 36) == 1%                 if ((b39 or b38 or b37 or b36 or b35) = '1') then   -- check bit range [39  35]\n            if bitorreduce(x, 40, 38) == 1%                     if ((b39 or b38 or b37) = '1') then   -- check bit range [39  37]\n                if bitorreduce(x, 40, 39) == 1%                         if ((b39 or b38) = '1') then   -- check bit range [39  38]\n                    if bitorreduce(x, 40, 40) == 1%                             if (b39 = '1') then   -- [39]\n                        lzc_count = fi(0,0,6,0);%                                 lzc_count <= \"000000\";  -- lzc = 0\n                    else%                             else  -- check bit range [38]\n                        lzc_count = fi(1,0,6,0);%                                 lzc_count <= \"000001\";  -- lzc = 1\n                    end%                             end if;\n                else%                         else  -- check bit range [37]\n                    lzc_count = fi(2,0,6,0);%                             lzc_count <= \"000010\";  -- lzc = 2\n                end%                         end if;\n            else%                     else  -- check bit range [36  35]\n                if bitorreduce(x, 37, 37) == 1%                         if (b36 = '1') then   -- [36]\n                    lzc_count = fi(3,0,6,0);%                             lzc_count <= \"000011\";  -- lzc = 3\n                else%                         else  -- check bit range [35]\n                    lzc_count = fi(4,0,6,0);%                             lzc_count <= \"000100\";  -- lzc = 4\n                end%                         end if;\n            end%                     end if;\n        else%                 else  -- check bit range [34  30]\n            if bitorreduce(x, 35, 33) == 1%                     if ((b34 or b33 or b32) = '1') then   -- check bit range [34  32]\n                if bitorreduce(x, 35, 34) == 1%                         if ((b34 or b33) = '1') then   -- check bit range [34  33]\n                    if bitorreduce(x, 35, 35) == 1%                             if (b34 = '1') then   -- [34]\n                        lzc_count = fi(5,0,6,0);%                                 lzc_count <= \"000101\";  -- lzc = 5\n                    else%                             else  -- check bit range [33]\n                        lzc_count = fi(6,0,6,0);%                                 lzc_count <= \"000110\";  -- lzc = 6\n                    end%                             end if;\n                else%                         else  -- check bit range [32]\n                    lzc_count = fi(7,0,6,0);%                             lzc_count <= \"000111\";  -- lzc = 7\n                end%                         end if;\n            else%                     else  -- check bit range [31  30]\n                if bitorreduce(x, 32, 32) == 1%                         if (b31 = '1') then   -- [31]\n                    lzc_count = fi(8,0,6,0);%                             lzc_count <= \"001000\";  -- lzc = 8\n                else%                         else  -- check bit range [30]\n                    lzc_count = fi(9,0,6,0);%                             lzc_count <= \"001001\";  -- lzc = 9\n                end%                         end if;\n            end%                     end if;\n        end%                 end if;\n    else%             else  -- check bit range [29  20]\n        if bitorreduce(x, 30, 26) == 1%                 if ((b29 or b28 or b27 or b26 or b25) = '1') then   -- check bit range [29  25]\n            if bitorreduce(x, 30, 28) == 1%                     if ((b29 or b28 or b27) = '1') then   -- check bit range [29  27]\n                if bitorreduce(x, 30, 29) == 1%                         if ((b29 or b28) = '1') then   -- check bit range [29  28]\n                    if bitorreduce(x, 30, 30) == 1%                             if (b29 = '1') then   -- [29]\n                        lzc_count = fi(10,0,6,0);%                                 lzc_count <= \"001010\";  -- lzc = 10\n                    else%                             else  -- check bit range [28]\n                        lzc_count = fi(11,0,6,0);%                                 lzc_count <= \"001011\";  -- lzc = 11\n                    end%                             end if;\n                else%                         else  -- check bit range [27]\n                    lzc_count = fi(12,0,6,0);%                             lzc_count <= \"001100\";  -- lzc = 12\n                end%                         end if;\n            else%                     else  -- check bit range [26  25]\n                if bitorreduce(x, 27, 27) == 1%                         if (b26 = '1') then   -- [26]\n                    lzc_count = fi(13,0,6,0);%                             lzc_count <= \"001101\";  -- lzc = 13\n                else%                         else  -- check bit range [25]\n                    lzc_count = fi(14,0,6,0);%                             lzc_count <= \"001110\";  -- lzc = 14\n                end%                         end if;\n            end%                     end if;\n        else%                 else  -- check bit range [24  20]\n            if bitorreduce(x, 25, 23) == 1%                     if ((b24 or b23 or b22) = '1') then   -- check bit range [24  22]\n                if bitorreduce(x, 25, 24) == 1%                         if ((b24 or b23) = '1') then   -- check bit range [24  23]\n                    if bitorreduce(x, 25, 25) == 1%                             if (b24 = '1') then   -- [24]\n                        lzc_count = fi(15,0,6,0);%                                 lzc_count <= \"001111\";  -- lzc = 15\n                    else%                             else  -- check bit range [23]\n                        lzc_count = fi(16,0,6,0);%                                 lzc_count <= \"010000\";  -- lzc = 16\n                    end%                             end if;\n                else%                         else  -- check bit range [22]\n                    lzc_count = fi(17,0,6,0);%                             lzc_count <= \"010001\";  -- lzc = 17\n                end%                         end if;\n            else%                     else  -- check bit range [21  20]\n                if bitorreduce(x, 22, 22) == 1%                         if (b21 = '1') then   -- [21]\n                    lzc_count = fi(18,0,6,0);%                             lzc_count <= \"010010\";  -- lzc = 18\n                else%                         else  -- check bit range [20]\n                    lzc_count = fi(19,0,6,0);%                             lzc_count <= \"010011\";  -- lzc = 19\n                end%                         end if;\n            end%                     end if;\n        end%                 end if;\n    end%             end if;\nelse%         else  -- check bit range [19   0]\n    if bitorreduce(x, 20, 11) == 1%             if ((b19 or b18 or b17 or b16 or b15 or b14 or b13 or b12 or b11 or b10) = '1') then   -- check bit range [19  10]\n        if bitorreduce(x, 20, 16) == 1%                 if ((b19 or b18 or b17 or b16 or b15) = '1') then   -- check bit range [19  15]\n            if bitorreduce(x, 20, 18) == 1%                     if ((b19 or b18 or b17) = '1') then   -- check bit range [19  17]\n                if bitorreduce(x, 20, 19) == 1%                         if ((b19 or b18) = '1') then   -- check bit range [19  18]\n                    if bitorreduce(x, 20, 20) == 1%                             if (b19 = '1') then   -- [19]\n                        lzc_count = fi(20,0,6,0);%                                 lzc_count <= \"010100\";  -- lzc = 20\n                    else%                             else  -- check bit range [18]\n                        lzc_count = fi(21,0,6,0);%                                 lzc_count <= \"010101\";  -- lzc = 21\n                    end%                             end if;\n                else%                         else  -- check bit range [17]\n                    lzc_count = fi(22,0,6,0);%                             lzc_count <= \"010110\";  -- lzc = 22\n                end%                         end if;\n            else%                     else  -- check bit range [16  15]\n                if bitorreduce(x, 17, 17) == 1%                         if (b16 = '1') then   -- [16]\n                    lzc_count = fi(23,0,6,0);%                             lzc_count <= \"010111\";  -- lzc = 23\n                else%                         else  -- check bit range [15]\n                    lzc_count = fi(24,0,6,0);%                             lzc_count <= \"011000\";  -- lzc = 24\n                end%                         end if;\n            end%                     end if;\n        else%                 else  -- check bit range [14  10]\n            if bitorreduce(x, 15, 13) == 1%                     if ((b14 or b13 or b12) = '1') then   -- check bit range [14  12]\n                if bitorreduce(x, 15, 14) == 1%                         if ((b14 or b13) = '1') then   -- check bit range [14  13]\n                    if bitorreduce(x, 15, 15) == 1%                             if (b14 = '1') then   -- [14]\n                        lzc_count = fi(25,0,6,0);%                                 lzc_count <= \"011001\";  -- lzc = 25\n                    else%                             else  -- check bit range [13]\n                        lzc_count = fi(26,0,6,0);%                                 lzc_count <= \"011010\";  -- lzc = 26\n                    end%                             end if;\n                else%                         else  -- check bit range [12]\n                    lzc_count = fi(27,0,6,0);%                             lzc_count <= \"011011\";  -- lzc = 27\n                end%                         end if;\n            else%                     else  -- check bit range [11  10]\n                if bitorreduce(x, 12, 12) == 1%                         if (b11 = '1') then   -- [11]\n                    lzc_count = fi(28,0,6,0);%                             lzc_count <= \"011100\";  -- lzc = 28\n                else%                         else  -- check bit range [10]\n                    lzc_count = fi(29,0,6,0);%                             lzc_count <= \"011101\";  -- lzc = 29\n                end%                         end if;\n            end%                     end if;\n        end%                 end if;\n    else%             else  -- check bit range [9  0]\n        if bitorreduce(x, 10, 6) == 1%                 if ((b9 or b8 or b7 or b6 or b5) = '1') then   -- check bit range [9  5]\n            if bitorreduce(x, 10, 9) == 1%                     if ((b9 or b8 or b7) = '1') then   -- check bit range [9  7]\n                if bitorreduce(x, 10, 9) == 1%                         if ((b9 or b8) = '1') then   -- check bit range [9  8]\n                    if bitorreduce(x, 10, 10) == 1%                             if (b9 = '1') then   -- [9]\n                        lzc_count = fi(30,0,6,0);%                                 lzc_count <= \"011110\";  -- lzc = 30\n                    else%                             else  -- check bit range [8]\n                        lzc_count = fi(31,0,6,0);%                                 lzc_count <= \"011111\";  -- lzc = 31\n                    end%                             end if;\n                else%                         else  -- check bit range [7]\n                    lzc_count = fi(32,0,6,0);%                             lzc_count <= \"100000\";  -- lzc = 32\n                end%                         end if;\n            else%                     else  -- check bit range [6  5]\n                if bitorreduce(x, 7, 7) == 1%                         if (b6 = '1') then   -- [6]\n                    lzc_count = fi(33,0,6,0);%                             lzc_count <= \"100001\";  -- lzc = 33\n                else%                         else  -- check bit range [5]\n                    lzc_count = fi(34,0,6,0);%                             lzc_count <= \"100010\";  -- lzc = 34\n                end%                         end if;\n            end%                     end if;\n        else%                 else  -- check bit range [4  0]\n            if bitorreduce(x, 5, 3) == 1%                     if ((b4 or b3 or b2) = '1') then   -- check bit range [4  2]\n                if bitorreduce(x, 5, 4) == 1%                         if ((b4 or b3) = '1') then   -- check bit range [4  3]\n                    if bitorreduce(x, 5, 5) == 1%                             if (b4 = '1') then   -- [4]\n                        lzc_count = fi(35,0,6,0);%                                 lzc_count <= \"100011\";  -- lzc = 35\n                    else%                             else  -- check bit range [3]\n                        lzc_count = fi(36,0,6,0);%                                 lzc_count <= \"100100\";  -- lzc = 36\n                    end%                             end if;\n                else%                         else  -- check bit range [2]\n                    lzc_count = fi(37,0,6,0);%                             lzc_count <= \"100101\";  -- lzc = 37\n                end%                         end if;\n            else%                     else  -- check bit range [1  0]\n                if bitorreduce(x, 2, 2) == 1%                         if (b1 = '1') then   -- [1]\n                    lzc_count = fi(38,0,6,0);%                             lzc_count <= \"100110\";  -- lzc = 38\n                else%                         else  -- check bit range [0]\n                    lzc_count = fi(39,0,6,0);%                             lzc_count <= \"100111\";  -- lzc = 39\n                end%                         end if;\n            end%                     end if;\n        end%                 end if;\n    end%             end if;\nend%         end if;\n\n\n\n",
   "code_sid":"sm_DynamicCompression:5715:1"
  },
  "finder":{
   "blocktype":"SubSystem",
   "masktype":""
  }
 },
 {
  "sid":"sm_DynamicCompression:5592",
  "className":"Simulink.DataTypeConversion",
  "icon":"sm_DynamicCompression_2333",
  "name":"Data Type Conversion1",
  "label":"Data Type Conversion1",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "ConvertRealWorld",
    "RndMeth",
    "SaturateOnIntegerOverflow",
    "SampleTime"
   ],
   "values":[
    "[]",
    "[]",
    "fixdt(0,W_bits,F_bits)",
    "off",
    "Real World Value (RWV)",
    "Floor",
    "off",
    "-1"
   ],
   "tabs":[
    "Parameter Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"DataTypeConversion",
   "masktype":""
  }
 },
 {
  "sid":"sm_DynamicCompression:5583#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"",
  "label":"",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5586#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"M",
  "label":"M",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "M",
    "off",
    "off",
    "on",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5587#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"addr(5 downto 2)",
  "label":"addr(5 downto 2)",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "addr(5 downto 2)",
    "off",
    "off",
    "on",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5715#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"",
  "label":"",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5584#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"",
  "label":"",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "on",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5589#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"",
  "label":"",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5585#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"NShifts",
  "label":"NShifts",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "NShifts",
    "off",
    "off",
    "on",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5593#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"",
  "label":"",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "on",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5594#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"",
  "label":"",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5591#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"",
  "label":"",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5590#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"",
  "label":"",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5717#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"",
  "label":"",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "on",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5588#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"",
  "label":"",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5716#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"",
  "label":"",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "on",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"sm_DynamicCompression:5592#out:1",
  "className":"Simulink.Line",
  "icon":"sm_DynamicCompression_2334",
  "name":"",
  "label":"",
  "parent":"sm_DynamicCompression:5582",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 }
]