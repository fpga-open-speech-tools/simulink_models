-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\conno\Documents\NIH-GitHub\simulink_models\models\fft_filters\hdlsrc\fft_filters\fft_filters_addr_A_offset_block.vhd
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: fft_filters_addr_A_offset_block
-- Source Path: fft_filters/dataplane/FFT_Analysis_Synthesis_Right/Analysis/FFT Frame Buffering/addr_A_offset
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY fft_filters_addr_A_offset_block IS
  PORT( counter_A                         :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        addr_A                            :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
        );
END fft_filters_addr_A_offset_block;


ARCHITECTURE rtl OF fft_filters_addr_A_offset_block IS

  -- Signals
  SIGNAL counter_A_unsigned               : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL write_offset_out1                : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Add_out1                         : unsigned(7 DOWNTO 0);  -- uint8

BEGIN
  -- Adding 1 to counter since the read pointer (addr_B) can catch the write pointer (addr_A) 
  -- if SysRate_Upsample_Factor is large enough and Simulink will throw an error.  
  -- It would be nice if the HDL Coder allowed a read-before-write option when
  -- the addresses are identical, which some memories support.

  counter_A_unsigned <= unsigned(counter_A);

  write_offset_out1 <= to_unsigned(16#01#, 8);

  Add_out1 <= counter_A_unsigned + write_offset_out1;

  addr_A <= std_logic_vector(Add_out1);

END rtl;

