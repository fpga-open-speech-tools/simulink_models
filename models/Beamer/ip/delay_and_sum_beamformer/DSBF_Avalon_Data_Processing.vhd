-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\conno\Documents\NIH-GitHub\simulink_models\models\delay_and_sum_beamformer\hdlsrc\DSBF\DSBF_Avalon_Data_Processing.vhd
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DSBF_Avalon_Data_Processing
-- Source Path: DSBF/dataplane/Avalon Data Processing
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.DSBF_dataplane_pkg.ALL;

ENTITY DSBF_Avalon_Data_Processing IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_128_1                       :   IN    std_logic;
        enb_1_2048_1                      :   IN    std_logic;
        enb_1_128_0                       :   IN    std_logic;
        enb_1_2048_0                      :   IN    std_logic;
        Sink_Data                         :   IN    vector_of_std_logic_vector24(0 TO 15);  -- sfix24_En23 [16]
        delays                            :   IN    vector_of_std_logic_vector12(0 TO 15);  -- sfix12_En6 [16]
        Source_Data                       :   OUT   vector_of_std_logic_vector32(0 TO 1)  -- sfix32_En28 [2]
        );
END DSBF_Avalon_Data_Processing;


ARCHITECTURE rtl OF DSBF_Avalon_Data_Processing IS

  ATTRIBUTE multstyle : string;

  -- Component Declarations
  COMPONENT DSBF_convert_to_sampling_rate
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_2048_1                    :   IN    std_logic;
          enb_1_2048_0                    :   IN    std_logic;
          data_in                         :   IN    vector_of_std_logic_vector24(0 TO 15);  -- sfix24_En23 [16]
          delays_in                       :   IN    vector_of_std_logic_vector12(0 TO 15);  -- sfix12_En6 [16]
          data_out                        :   OUT   vector_of_std_logic_vector24(0 TO 15);  -- sfix24_En23 [16]
          delays_out                      :   OUT   vector_of_std_logic_vector12(0 TO 15)  -- sfix12_En6 [16]
          );
  END COMPONENT;

  COMPONENT DSBF_delay_signals
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_128_1                     :   IN    std_logic;
          enb_1_2048_1                    :   IN    std_logic;
          enb_1_128_0                     :   IN    std_logic;
          enb_1_2048_0                    :   IN    std_logic;
          data_in                         :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En23
          delays                          :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En6
          Out1                            :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En28
          );
  END COMPONENT;

  COMPONENT DSBF_normalize
    PORT( input_value                     :   IN    std_logic_vector(35 DOWNTO 0);  -- sfix36_En28
          normalized_value                :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En28
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : DSBF_convert_to_sampling_rate
    USE ENTITY work.DSBF_convert_to_sampling_rate(rtl);

  FOR ALL : DSBF_delay_signals
    USE ENTITY work.DSBF_delay_signals(rtl);

  FOR ALL : DSBF_normalize
    USE ENTITY work.DSBF_normalize(rtl);

  -- Signals
  SIGNAL convert_to_sampling_rate_out1    : vector_of_std_logic_vector24(0 TO 15);  -- ufix24 [16]
  SIGNAL convert_to_sampling_rate_out2    : vector_of_std_logic_vector12(0 TO 15);  -- ufix12 [16]
  SIGNAL convert_to_sampling_rate_out1_signed : vector_of_signed24(0 TO 15);  -- sfix24_En23 [16]
  SIGNAL Delay3_out1                      : vector_of_signed24(0 TO 15);  -- sfix24_En23 [16]
  SIGNAL Delay3_out1_1                    : vector_of_std_logic_vector24(0 TO 15);  -- ufix24 [16]
  SIGNAL convert_to_sampling_rate_out2_signed : vector_of_signed12(0 TO 15);  -- sfix12_En6 [16]
  SIGNAL Delay2_out1                      : vector_of_signed12(0 TO 15);  -- sfix12_En6 [16]
  SIGNAL Delay2_out1_1                    : vector_of_std_logic_vector12(0 TO 15);  -- ufix12 [16]
  SIGNAL delay_signals_out1               : vector_of_std_logic_vector32(0 TO 15);  -- ufix32 [16]
  SIGNAL delay_signals_out1_signed        : vector_of_signed32(0 TO 15);  -- sfix32_En28 [16]
  SIGNAL delay_signals_out1_1             : vector_of_signed32(0 TO 15);  -- sfix32_En28 [16]
  SIGNAL Delay4_out1                      : vector_of_signed32(0 TO 15);  -- sfix32_En28 [16]
  SIGNAL Delay4_out1_0                    : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Delay4_out1_1                    : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage2_add_cast  : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_stage2_add_cast_1 : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_op_stage2        : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Delay4_out1_2                    : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage3_add_cast  : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_op_stage3        : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Delay4_out1_3                    : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage4_add_cast  : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_op_stage4        : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Delay4_out1_4                    : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage5_add_cast  : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_op_stage5        : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Delay4_out1_5                    : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage6_add_cast  : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_op_stage6        : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Delay4_out1_6                    : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage7_add_cast  : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_op_stage7        : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Delay4_out1_7                    : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage8_add_cast  : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_op_stage8        : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Delay4_out1_8                    : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage9_add_cast  : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_op_stage9        : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Delay4_out1_9                    : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage10_add_cast : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_op_stage10       : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Delay4_out1_10                   : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage11_add_cast : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_op_stage11       : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Delay4_out1_11                   : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage12_add_cast : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_op_stage12       : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Delay4_out1_12                   : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage13_add_cast : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_op_stage13       : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Delay4_out1_13                   : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage14_add_cast : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_op_stage14       : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Delay4_out1_14                   : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage15_add_cast : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_op_stage15       : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Delay4_out1_15                   : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Sum_of_Elements_stage16_add_cast : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL Sum_of_Elements_out1             : signed(35 DOWNTO 0);  -- sfix36_En28
  SIGNAL normalize_out1                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Mux_out1                         : vector_of_std_logic_vector32(0 TO 1);  -- ufix32 [2]
  SIGNAL delay_signal_out1_1              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_0              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_2              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_6              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_3              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_4              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_8              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_5              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_7              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_9              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_10             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_11             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_12             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_13             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_14             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delay_signal_out1_15             : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_convert_to_sampling_rate : DSBF_convert_to_sampling_rate
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => Sink_Data,  -- sfix24_En23 [16]
              delays_in => delays,  -- sfix12_En6 [16]
              data_out => convert_to_sampling_rate_out1,  -- sfix24_En23 [16]
              delays_out => convert_to_sampling_rate_out2  -- sfix12_En6 [16]
              );

  u_normalize : DSBF_normalize
    PORT MAP( input_value => std_logic_vector(Sum_of_Elements_out1),  -- sfix36_En28
              normalized_value => normalize_out1  -- sfix32_En28
              );

  u_delay_signals_instance2 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(1)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(1)),  -- sfix12_En6
              Out1 => delay_signal_out1_1  -- sfix32_En28
              );

  u_delay_signals_instance1 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(0)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(0)),  -- sfix12_En6
              Out1 => delay_signal_out1_0  -- sfix32_En28
              );

  u_delay_signals_instance3 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(2)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(2)),  -- sfix12_En6
              Out1 => delay_signal_out1_2  -- sfix32_En28
              );

  u_delay_signals_instance7 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(6)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(6)),  -- sfix12_En6
              Out1 => delay_signal_out1_6  -- sfix32_En28
              );

  u_delay_signals_instance4 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(3)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(3)),  -- sfix12_En6
              Out1 => delay_signal_out1_3  -- sfix32_En28
              );

  u_delay_signals_instance5 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(4)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(4)),  -- sfix12_En6
              Out1 => delay_signal_out1_4  -- sfix32_En28
              );

  u_delay_signals_instance9 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(8)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(8)),  -- sfix12_En6
              Out1 => delay_signal_out1_8  -- sfix32_En28
              );

  u_delay_signals_instance6 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(5)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(5)),  -- sfix12_En6
              Out1 => delay_signal_out1_5  -- sfix32_En28
              );

  u_delay_signals_instance8 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(7)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(7)),  -- sfix12_En6
              Out1 => delay_signal_out1_7  -- sfix32_En28
              );

  u_delay_signals_instance10 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(9)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(9)),  -- sfix12_En6
              Out1 => delay_signal_out1_9  -- sfix32_En28
              );

  u_delay_signals_instance11 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(10)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(10)),  -- sfix12_En6
              Out1 => delay_signal_out1_10  -- sfix32_En28
              );

  u_delay_signals_instance12 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(11)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(11)),  -- sfix12_En6
              Out1 => delay_signal_out1_11  -- sfix32_En28
              );

  u_delay_signals_instance13 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(12)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(12)),  -- sfix12_En6
              Out1 => delay_signal_out1_12  -- sfix32_En28
              );

  u_delay_signals_instance14 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(13)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(13)),  -- sfix12_En6
              Out1 => delay_signal_out1_13  -- sfix32_En28
              );

  u_delay_signals_instance15 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(14)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(14)),  -- sfix12_En6
              Out1 => delay_signal_out1_14  -- sfix32_En28
              );

  u_delay_signals_instance16 : DSBF_delay_signals
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_128_1 => enb_1_128_1,
              enb_1_2048_1 => enb_1_2048_1,
              enb_1_128_0 => enb_1_128_0,
              enb_1_2048_0 => enb_1_2048_0,
              data_in => std_logic_vector(Delay3_out1(15)),  -- sfix24_En23
              delays => std_logic_vector(Delay2_out1(15)),  -- sfix12_En6
              Out1 => delay_signal_out1_15  -- sfix32_En28
              );

  outputgen4: FOR k1 IN 0 TO 15 GENERATE
    convert_to_sampling_rate_out1_signed(k1) <= signed(convert_to_sampling_rate_out1(k1));
  END GENERATE;

  Delay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay3_out1 <= (OTHERS => to_signed(16#000000#, 24));
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Delay3_out1 <= convert_to_sampling_rate_out1_signed;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  outputgen3: FOR k1 IN 0 TO 15 GENERATE
    Delay3_out1_1(k1) <= std_logic_vector(Delay3_out1(k1));
  END GENERATE;

  outputgen2: FOR k1 IN 0 TO 15 GENERATE
    convert_to_sampling_rate_out2_signed(k1) <= signed(convert_to_sampling_rate_out2(k1));
  END GENERATE;

  Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_out1 <= (OTHERS => to_signed(16#000#, 12));
    ELSIF rising_edge(clk) THEN
      IF enb_1_2048_0 = '1' THEN
        Delay2_out1 <= convert_to_sampling_rate_out2_signed;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  outputgen1: FOR k1 IN 0 TO 15 GENERATE
    Delay2_out1_1(k1) <= std_logic_vector(Delay2_out1(k1));
  END GENERATE;

  GEN_LABEL: FOR k IN 0 TO 15 GENERATE
    u_delay_signals : DSBF_delay_signals
      PORT MAP( clk => clk,
                reset => reset,
                enb_1_128_1 => enb_1_128_1,
                enb_1_2048_1 => enb_1_2048_1,
                enb_1_128_0 => enb_1_128_0,
                enb_1_2048_0 => enb_1_2048_0,
                data_in => Delay3_out1_1(k),  -- sfix24_En23
                delays => Delay2_out1_1(k),  -- sfix12_En6
                Out1 => delay_signals_out1(k)  -- sfix32_En28
                );
  END GENERATE;

  outputgen: FOR k IN 0 TO 15 GENERATE
    delay_signals_out1_signed(k) <= signed(delay_signals_out1(k));
  END GENERATE;

  delayMatch_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_signals_out1_1 <= (OTHERS => to_signed(0, 32));
    ELSIF rising_edge(clk) THEN
      IF enb_1_128_0 = '1' THEN
        delay_signals_out1_1 <= delay_signals_out1_signed;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  Delay4_out1 <= delay_signals_out1_1;

  Delay4_out1_0 <= Delay4_out1(0);

  Delay4_out1_1 <= Delay4_out1(1);

  Sum_of_Elements_stage2_add_cast <= resize(Delay4_out1_0, 36);
  Sum_of_Elements_stage2_add_cast_1 <= resize(Delay4_out1_1, 36);
  Sum_of_Elements_op_stage2 <= Sum_of_Elements_stage2_add_cast + Sum_of_Elements_stage2_add_cast_1;

  Delay4_out1_2 <= Delay4_out1(2);

  Sum_of_Elements_stage3_add_cast <= resize(Delay4_out1_2, 36);
  Sum_of_Elements_op_stage3 <= Sum_of_Elements_op_stage2 + Sum_of_Elements_stage3_add_cast;

  Delay4_out1_3 <= Delay4_out1(3);

  Sum_of_Elements_stage4_add_cast <= resize(Delay4_out1_3, 36);
  Sum_of_Elements_op_stage4 <= Sum_of_Elements_op_stage3 + Sum_of_Elements_stage4_add_cast;

  Delay4_out1_4 <= Delay4_out1(4);

  Sum_of_Elements_stage5_add_cast <= resize(Delay4_out1_4, 36);
  Sum_of_Elements_op_stage5 <= Sum_of_Elements_op_stage4 + Sum_of_Elements_stage5_add_cast;

  Delay4_out1_5 <= Delay4_out1(5);

  Sum_of_Elements_stage6_add_cast <= resize(Delay4_out1_5, 36);
  Sum_of_Elements_op_stage6 <= Sum_of_Elements_op_stage5 + Sum_of_Elements_stage6_add_cast;

  Delay4_out1_6 <= Delay4_out1(6);

  Sum_of_Elements_stage7_add_cast <= resize(Delay4_out1_6, 36);
  Sum_of_Elements_op_stage7 <= Sum_of_Elements_op_stage6 + Sum_of_Elements_stage7_add_cast;

  Delay4_out1_7 <= Delay4_out1(7);

  Sum_of_Elements_stage8_add_cast <= resize(Delay4_out1_7, 36);
  Sum_of_Elements_op_stage8 <= Sum_of_Elements_op_stage7 + Sum_of_Elements_stage8_add_cast;

  Delay4_out1_8 <= Delay4_out1(8);

  Sum_of_Elements_stage9_add_cast <= resize(Delay4_out1_8, 36);
  Sum_of_Elements_op_stage9 <= Sum_of_Elements_op_stage8 + Sum_of_Elements_stage9_add_cast;

  Delay4_out1_9 <= Delay4_out1(9);

  Sum_of_Elements_stage10_add_cast <= resize(Delay4_out1_9, 36);
  Sum_of_Elements_op_stage10 <= Sum_of_Elements_op_stage9 + Sum_of_Elements_stage10_add_cast;

  Delay4_out1_10 <= Delay4_out1(10);

  Sum_of_Elements_stage11_add_cast <= resize(Delay4_out1_10, 36);
  Sum_of_Elements_op_stage11 <= Sum_of_Elements_op_stage10 + Sum_of_Elements_stage11_add_cast;

  Delay4_out1_11 <= Delay4_out1(11);

  Sum_of_Elements_stage12_add_cast <= resize(Delay4_out1_11, 36);
  Sum_of_Elements_op_stage12 <= Sum_of_Elements_op_stage11 + Sum_of_Elements_stage12_add_cast;

  Delay4_out1_12 <= Delay4_out1(12);

  Sum_of_Elements_stage13_add_cast <= resize(Delay4_out1_12, 36);
  Sum_of_Elements_op_stage13 <= Sum_of_Elements_op_stage12 + Sum_of_Elements_stage13_add_cast;

  Delay4_out1_13 <= Delay4_out1(13);

  Sum_of_Elements_stage14_add_cast <= resize(Delay4_out1_13, 36);
  Sum_of_Elements_op_stage14 <= Sum_of_Elements_op_stage13 + Sum_of_Elements_stage14_add_cast;

  Delay4_out1_14 <= Delay4_out1(14);

  Sum_of_Elements_stage15_add_cast <= resize(Delay4_out1_14, 36);
  Sum_of_Elements_op_stage15 <= Sum_of_Elements_op_stage14 + Sum_of_Elements_stage15_add_cast;

  Delay4_out1_15 <= Delay4_out1(15);

  Sum_of_Elements_stage16_add_cast <= resize(Delay4_out1_15, 36);
  Sum_of_Elements_out1 <= Sum_of_Elements_op_stage15 + Sum_of_Elements_stage16_add_cast;

  Mux_out1(0) <= normalize_out1;
  Mux_out1(1) <= normalize_out1;

  Source_Data <= Mux_out1;

















END rtl;

