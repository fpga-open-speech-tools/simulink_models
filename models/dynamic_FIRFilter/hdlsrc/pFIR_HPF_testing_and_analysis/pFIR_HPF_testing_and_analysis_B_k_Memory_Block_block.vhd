-- -------------------------------------------------------------
-- 
-- File Name: /home/justin/Documents/FEI/simulink_models/models/dynamic_FIRFilter/hdlsrc/pFIR_HPF_testing_and_analysis/pFIR_HPF_testing_and_analysis_B_k_Memory_Block_block.vhd
-- 
-- Generated by MATLAB 9.6 and HDL Coder 3.14
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: pFIR_HPF_testing_and_analysis_B_k_Memory_Block_block
-- Source Path: pFIR_HPF_testing_and_analysis/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Right 
-- Channel Processing/Static Upclocked FIR/B_k_Memory_Bloc
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.pFIR_HPF_testing_and_analysis_dataplane_pkg.ALL;

ENTITY pFIR_HPF_testing_and_analysis_B_k_Memory_Block_block IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_16_0                        :   IN    std_logic;
        din_A                             :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
        addr_A                            :   IN    std_logic_vector(6 DOWNTO 0);  -- ufix7
        we_A                              :   IN    std_logic;
        din_B                             :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
        addr_B                            :   IN    std_logic_vector(6 DOWNTO 0);  -- ufix7
        we_B                              :   IN    std_logic;
        dout_A                            :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
        dout_B                            :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En28
        );
END pFIR_HPF_testing_and_analysis_B_k_Memory_Block_block;


ARCHITECTURE rtl OF pFIR_HPF_testing_and_analysis_B_k_Memory_Block_block IS

  ATTRIBUTE multstyle : string;

  -- Component Declarations
  COMPONENT pFIR_HPF_testing_and_analysis_Data_Type_Conversion_Inherited_A_block
    PORT( u                               :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
          y                               :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En28
          );
  END COMPONENT;

  COMPONENT pFIR_HPF_testing_and_analysis_Data_Type_Conversion_Inherited_B_block
    PORT( u                               :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
          y                               :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En28
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : pFIR_HPF_testing_and_analysis_Data_Type_Conversion_Inherited_A_block
    USE ENTITY work.pFIR_HPF_testing_and_analysis_Data_Type_Conversion_Inherited_A_block(rtl);

  FOR ALL : pFIR_HPF_testing_and_analysis_Data_Type_Conversion_Inherited_B_block
    USE ENTITY work.pFIR_HPF_testing_and_analysis_Data_Type_Conversion_Inherited_B_block(rtl);

  -- Constants
  CONSTANT ram_data                       : vector_of_signed32(0 TO 127) := 
    (to_signed(838861, 32), to_signed(846914, 32), to_signed(854698, 32), to_signed(862752, 32),
     to_signed(870536, 32), to_signed(878321, 32), to_signed(885837, 32), to_signed(893622, 32),
     to_signed(900869, 32), to_signed(908386, 32), to_signed(915633, 32), to_signed(922881, 32),
     to_signed(930129, 32), to_signed(937108, 32), to_signed(943819, 32), to_signed(950798, 32),
     to_signed(957509, 32), to_signed(963952, 32), to_signed(970663, 32), to_signed(976837, 32),
     to_signed(983279, 32), to_signed(989185, 32), to_signed(995359, 32), to_signed(1001264, 32),
     to_signed(1007170, 32), to_signed(1012807, 32), to_signed(1018176, 32), to_signed(1023813, 32),
     to_signed(1028913, 32), to_signed(1034282, 32), to_signed(1039114, 32), to_signed(1044214, 32),
     to_signed(1048777, 32), to_signed(1053609, 32), to_signed(1057904, 32), to_signed(1062468, 32),
     to_signed(1066494, 32), to_signed(1070789, 32), to_signed(1074547, 32), to_signed(1078305, 32),
     to_signed(1082063, 32), to_signed(1085553, 32), to_signed(1089043, 32), to_signed(1092264, 32),
     to_signed(1095217, 32), to_signed(1098169, 32), to_signed(1101122, 32), to_signed(1103538, 32),
     to_signed(1106223, 32), to_signed(1108370, 32), to_signed(1110517, 32), to_signed(1112665, 32),
     to_signed(1114544, 32), to_signed(1116155, 32), to_signed(1117765, 32), to_signed(1119107, 32),
     to_signed(1120450, 32), to_signed(1121523, 32), to_signed(1122597, 32), to_signed(1123402, 32),
     to_signed(1123939, 32), to_signed(1124476, 32), to_signed(1124745, 32), to_signed(1124745, 32),
     to_signed(1124745, 32), to_signed(1124745, 32), to_signed(1124476, 32), to_signed(1123939, 32),
     to_signed(1123402, 32), to_signed(1122597, 32), to_signed(1121523, 32), to_signed(1120450, 32),
     to_signed(1119107, 32), to_signed(1117765, 32), to_signed(1116155, 32), to_signed(1114544, 32),
     to_signed(1112665, 32), to_signed(1110517, 32), to_signed(1108370, 32), to_signed(1106223, 32),
     to_signed(1103538, 32), to_signed(1101122, 32), to_signed(1098169, 32), to_signed(1095217, 32),
     to_signed(1092264, 32), to_signed(1089043, 32), to_signed(1085553, 32), to_signed(1082063, 32),
     to_signed(1078305, 32), to_signed(1074547, 32), to_signed(1070789, 32), to_signed(1066494, 32),
     to_signed(1062468, 32), to_signed(1057904, 32), to_signed(1053609, 32), to_signed(1048777, 32),
     to_signed(1044214, 32), to_signed(1039114, 32), to_signed(1034282, 32), to_signed(1028913, 32),
     to_signed(1023813, 32), to_signed(1018176, 32), to_signed(1012807, 32), to_signed(1007170, 32),
     to_signed(1001264, 32), to_signed(995359, 32), to_signed(989185, 32), to_signed(983279, 32),
     to_signed(976837, 32), to_signed(970663, 32), to_signed(963952, 32), to_signed(957509, 32),
     to_signed(950798, 32), to_signed(943819, 32), to_signed(937108, 32), to_signed(930129, 32),
     to_signed(922881, 32), to_signed(915633, 32), to_signed(908386, 32), to_signed(900869, 32),
     to_signed(893622, 32), to_signed(885837, 32), to_signed(878321, 32), to_signed(870536, 32),
     to_signed(862752, 32), to_signed(854698, 32), to_signed(846914, 32), to_signed(838861, 32));  -- sfix32 [128]

  -- Signals
  SIGNAL addr_A_unsigned                  : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL convertA_out1                    : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL ram_data_A_out1                  : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL And_out1                         : std_logic;
  SIGNAL din_A_signed                     : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL din_B_signed                     : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL addr_B_unsigned                  : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL convertB_out1                    : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL switch_A_out1                    : vector_of_signed32(0 TO 127);  -- sfix32_En28 [128]
  SIGNAL wr_port1_out1                    : vector_of_signed32(0 TO 127);  -- sfix32_En28 [128]
  SIGNAL ram_out1                         : vector_of_signed32(0 TO 127);  -- sfix32_En28 [128]
  SIGNAL wr_port_out1                     : vector_of_signed32(0 TO 127);  -- sfix32_En28 [128]
  SIGNAL switch_A2_out1                   : vector_of_signed32(0 TO 127);  -- sfix32_En28 [128]
  SIGNAL switch_B_out1                    : vector_of_signed32(0 TO 127);  -- sfix32_En28 [128]
  SIGNAL select_A_out1                    : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Data_Type_Conversion_Inherited_A_out1 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ram_data_B_out1                  : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL select_B_out1                    : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Data_Type_Conversion_Inherited_B_out1 : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_Data_Type_Conversion_Inherited_A : pFIR_HPF_testing_and_analysis_Data_Type_Conversion_Inherited_A_block
    PORT MAP( u => std_logic_vector(select_A_out1),  -- sfix32_En28
              y => Data_Type_Conversion_Inherited_A_out1  -- sfix32_En28
              );

  u_Data_Type_Conversion_Inherited_B : pFIR_HPF_testing_and_analysis_Data_Type_Conversion_Inherited_B_block
    PORT MAP( u => std_logic_vector(select_B_out1),  -- sfix32_En28
              y => Data_Type_Conversion_Inherited_B_out1  -- sfix32_En28
              );

  addr_A_unsigned <= unsigned(addr_A);

  convertA_out1 <= resize(addr_A_unsigned, 16);

  ram_data_A_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ram_data_A_out1 <= to_unsigned(16#0000#, 16);
    ELSIF rising_edge(clk) THEN
      IF enb_1_16_0 = '1' THEN
        ram_data_A_out1 <= convertA_out1;
      END IF;
    END IF;
  END PROCESS ram_data_A_process;


  And_out1 <= we_A OR we_B;

  din_A_signed <= signed(din_A);

  din_B_signed <= signed(din_B);

  addr_B_unsigned <= unsigned(addr_B);

  convertB_out1 <= resize(addr_B_unsigned, 16);

  
  wr_port1_out1(0) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0000#, 16) ELSE
      switch_A_out1(0);
  
  wr_port1_out1(1) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0001#, 16) ELSE
      switch_A_out1(1);
  
  wr_port1_out1(2) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0002#, 16) ELSE
      switch_A_out1(2);
  
  wr_port1_out1(3) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0003#, 16) ELSE
      switch_A_out1(3);
  
  wr_port1_out1(4) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0004#, 16) ELSE
      switch_A_out1(4);
  
  wr_port1_out1(5) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0005#, 16) ELSE
      switch_A_out1(5);
  
  wr_port1_out1(6) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0006#, 16) ELSE
      switch_A_out1(6);
  
  wr_port1_out1(7) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0007#, 16) ELSE
      switch_A_out1(7);
  
  wr_port1_out1(8) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0008#, 16) ELSE
      switch_A_out1(8);
  
  wr_port1_out1(9) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0009#, 16) ELSE
      switch_A_out1(9);
  
  wr_port1_out1(10) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#000A#, 16) ELSE
      switch_A_out1(10);
  
  wr_port1_out1(11) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#000B#, 16) ELSE
      switch_A_out1(11);
  
  wr_port1_out1(12) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#000C#, 16) ELSE
      switch_A_out1(12);
  
  wr_port1_out1(13) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#000D#, 16) ELSE
      switch_A_out1(13);
  
  wr_port1_out1(14) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#000E#, 16) ELSE
      switch_A_out1(14);
  
  wr_port1_out1(15) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#000F#, 16) ELSE
      switch_A_out1(15);
  
  wr_port1_out1(16) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0010#, 16) ELSE
      switch_A_out1(16);
  
  wr_port1_out1(17) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0011#, 16) ELSE
      switch_A_out1(17);
  
  wr_port1_out1(18) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0012#, 16) ELSE
      switch_A_out1(18);
  
  wr_port1_out1(19) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0013#, 16) ELSE
      switch_A_out1(19);
  
  wr_port1_out1(20) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0014#, 16) ELSE
      switch_A_out1(20);
  
  wr_port1_out1(21) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0015#, 16) ELSE
      switch_A_out1(21);
  
  wr_port1_out1(22) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0016#, 16) ELSE
      switch_A_out1(22);
  
  wr_port1_out1(23) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0017#, 16) ELSE
      switch_A_out1(23);
  
  wr_port1_out1(24) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0018#, 16) ELSE
      switch_A_out1(24);
  
  wr_port1_out1(25) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0019#, 16) ELSE
      switch_A_out1(25);
  
  wr_port1_out1(26) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#001A#, 16) ELSE
      switch_A_out1(26);
  
  wr_port1_out1(27) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#001B#, 16) ELSE
      switch_A_out1(27);
  
  wr_port1_out1(28) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#001C#, 16) ELSE
      switch_A_out1(28);
  
  wr_port1_out1(29) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#001D#, 16) ELSE
      switch_A_out1(29);
  
  wr_port1_out1(30) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#001E#, 16) ELSE
      switch_A_out1(30);
  
  wr_port1_out1(31) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#001F#, 16) ELSE
      switch_A_out1(31);
  
  wr_port1_out1(32) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0020#, 16) ELSE
      switch_A_out1(32);
  
  wr_port1_out1(33) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0021#, 16) ELSE
      switch_A_out1(33);
  
  wr_port1_out1(34) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0022#, 16) ELSE
      switch_A_out1(34);
  
  wr_port1_out1(35) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0023#, 16) ELSE
      switch_A_out1(35);
  
  wr_port1_out1(36) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0024#, 16) ELSE
      switch_A_out1(36);
  
  wr_port1_out1(37) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0025#, 16) ELSE
      switch_A_out1(37);
  
  wr_port1_out1(38) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0026#, 16) ELSE
      switch_A_out1(38);
  
  wr_port1_out1(39) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0027#, 16) ELSE
      switch_A_out1(39);
  
  wr_port1_out1(40) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0028#, 16) ELSE
      switch_A_out1(40);
  
  wr_port1_out1(41) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0029#, 16) ELSE
      switch_A_out1(41);
  
  wr_port1_out1(42) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#002A#, 16) ELSE
      switch_A_out1(42);
  
  wr_port1_out1(43) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#002B#, 16) ELSE
      switch_A_out1(43);
  
  wr_port1_out1(44) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#002C#, 16) ELSE
      switch_A_out1(44);
  
  wr_port1_out1(45) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#002D#, 16) ELSE
      switch_A_out1(45);
  
  wr_port1_out1(46) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#002E#, 16) ELSE
      switch_A_out1(46);
  
  wr_port1_out1(47) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#002F#, 16) ELSE
      switch_A_out1(47);
  
  wr_port1_out1(48) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0030#, 16) ELSE
      switch_A_out1(48);
  
  wr_port1_out1(49) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0031#, 16) ELSE
      switch_A_out1(49);
  
  wr_port1_out1(50) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0032#, 16) ELSE
      switch_A_out1(50);
  
  wr_port1_out1(51) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0033#, 16) ELSE
      switch_A_out1(51);
  
  wr_port1_out1(52) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0034#, 16) ELSE
      switch_A_out1(52);
  
  wr_port1_out1(53) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0035#, 16) ELSE
      switch_A_out1(53);
  
  wr_port1_out1(54) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0036#, 16) ELSE
      switch_A_out1(54);
  
  wr_port1_out1(55) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0037#, 16) ELSE
      switch_A_out1(55);
  
  wr_port1_out1(56) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0038#, 16) ELSE
      switch_A_out1(56);
  
  wr_port1_out1(57) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0039#, 16) ELSE
      switch_A_out1(57);
  
  wr_port1_out1(58) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#003A#, 16) ELSE
      switch_A_out1(58);
  
  wr_port1_out1(59) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#003B#, 16) ELSE
      switch_A_out1(59);
  
  wr_port1_out1(60) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#003C#, 16) ELSE
      switch_A_out1(60);
  
  wr_port1_out1(61) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#003D#, 16) ELSE
      switch_A_out1(61);
  
  wr_port1_out1(62) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#003E#, 16) ELSE
      switch_A_out1(62);
  
  wr_port1_out1(63) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#003F#, 16) ELSE
      switch_A_out1(63);
  
  wr_port1_out1(64) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0040#, 16) ELSE
      switch_A_out1(64);
  
  wr_port1_out1(65) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0041#, 16) ELSE
      switch_A_out1(65);
  
  wr_port1_out1(66) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0042#, 16) ELSE
      switch_A_out1(66);
  
  wr_port1_out1(67) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0043#, 16) ELSE
      switch_A_out1(67);
  
  wr_port1_out1(68) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0044#, 16) ELSE
      switch_A_out1(68);
  
  wr_port1_out1(69) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0045#, 16) ELSE
      switch_A_out1(69);
  
  wr_port1_out1(70) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0046#, 16) ELSE
      switch_A_out1(70);
  
  wr_port1_out1(71) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0047#, 16) ELSE
      switch_A_out1(71);
  
  wr_port1_out1(72) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0048#, 16) ELSE
      switch_A_out1(72);
  
  wr_port1_out1(73) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0049#, 16) ELSE
      switch_A_out1(73);
  
  wr_port1_out1(74) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#004A#, 16) ELSE
      switch_A_out1(74);
  
  wr_port1_out1(75) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#004B#, 16) ELSE
      switch_A_out1(75);
  
  wr_port1_out1(76) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#004C#, 16) ELSE
      switch_A_out1(76);
  
  wr_port1_out1(77) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#004D#, 16) ELSE
      switch_A_out1(77);
  
  wr_port1_out1(78) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#004E#, 16) ELSE
      switch_A_out1(78);
  
  wr_port1_out1(79) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#004F#, 16) ELSE
      switch_A_out1(79);
  
  wr_port1_out1(80) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0050#, 16) ELSE
      switch_A_out1(80);
  
  wr_port1_out1(81) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0051#, 16) ELSE
      switch_A_out1(81);
  
  wr_port1_out1(82) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0052#, 16) ELSE
      switch_A_out1(82);
  
  wr_port1_out1(83) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0053#, 16) ELSE
      switch_A_out1(83);
  
  wr_port1_out1(84) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0054#, 16) ELSE
      switch_A_out1(84);
  
  wr_port1_out1(85) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0055#, 16) ELSE
      switch_A_out1(85);
  
  wr_port1_out1(86) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0056#, 16) ELSE
      switch_A_out1(86);
  
  wr_port1_out1(87) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0057#, 16) ELSE
      switch_A_out1(87);
  
  wr_port1_out1(88) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0058#, 16) ELSE
      switch_A_out1(88);
  
  wr_port1_out1(89) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0059#, 16) ELSE
      switch_A_out1(89);
  
  wr_port1_out1(90) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#005A#, 16) ELSE
      switch_A_out1(90);
  
  wr_port1_out1(91) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#005B#, 16) ELSE
      switch_A_out1(91);
  
  wr_port1_out1(92) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#005C#, 16) ELSE
      switch_A_out1(92);
  
  wr_port1_out1(93) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#005D#, 16) ELSE
      switch_A_out1(93);
  
  wr_port1_out1(94) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#005E#, 16) ELSE
      switch_A_out1(94);
  
  wr_port1_out1(95) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#005F#, 16) ELSE
      switch_A_out1(95);
  
  wr_port1_out1(96) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0060#, 16) ELSE
      switch_A_out1(96);
  
  wr_port1_out1(97) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0061#, 16) ELSE
      switch_A_out1(97);
  
  wr_port1_out1(98) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0062#, 16) ELSE
      switch_A_out1(98);
  
  wr_port1_out1(99) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0063#, 16) ELSE
      switch_A_out1(99);
  
  wr_port1_out1(100) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0064#, 16) ELSE
      switch_A_out1(100);
  
  wr_port1_out1(101) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0065#, 16) ELSE
      switch_A_out1(101);
  
  wr_port1_out1(102) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0066#, 16) ELSE
      switch_A_out1(102);
  
  wr_port1_out1(103) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0067#, 16) ELSE
      switch_A_out1(103);
  
  wr_port1_out1(104) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0068#, 16) ELSE
      switch_A_out1(104);
  
  wr_port1_out1(105) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0069#, 16) ELSE
      switch_A_out1(105);
  
  wr_port1_out1(106) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#006A#, 16) ELSE
      switch_A_out1(106);
  
  wr_port1_out1(107) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#006B#, 16) ELSE
      switch_A_out1(107);
  
  wr_port1_out1(108) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#006C#, 16) ELSE
      switch_A_out1(108);
  
  wr_port1_out1(109) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#006D#, 16) ELSE
      switch_A_out1(109);
  
  wr_port1_out1(110) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#006E#, 16) ELSE
      switch_A_out1(110);
  
  wr_port1_out1(111) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#006F#, 16) ELSE
      switch_A_out1(111);
  
  wr_port1_out1(112) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0070#, 16) ELSE
      switch_A_out1(112);
  
  wr_port1_out1(113) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0071#, 16) ELSE
      switch_A_out1(113);
  
  wr_port1_out1(114) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0072#, 16) ELSE
      switch_A_out1(114);
  
  wr_port1_out1(115) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0073#, 16) ELSE
      switch_A_out1(115);
  
  wr_port1_out1(116) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0074#, 16) ELSE
      switch_A_out1(116);
  
  wr_port1_out1(117) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0075#, 16) ELSE
      switch_A_out1(117);
  
  wr_port1_out1(118) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0076#, 16) ELSE
      switch_A_out1(118);
  
  wr_port1_out1(119) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0077#, 16) ELSE
      switch_A_out1(119);
  
  wr_port1_out1(120) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0078#, 16) ELSE
      switch_A_out1(120);
  
  wr_port1_out1(121) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#0079#, 16) ELSE
      switch_A_out1(121);
  
  wr_port1_out1(122) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#007A#, 16) ELSE
      switch_A_out1(122);
  
  wr_port1_out1(123) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#007B#, 16) ELSE
      switch_A_out1(123);
  
  wr_port1_out1(124) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#007C#, 16) ELSE
      switch_A_out1(124);
  
  wr_port1_out1(125) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#007D#, 16) ELSE
      switch_A_out1(125);
  
  wr_port1_out1(126) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#007E#, 16) ELSE
      switch_A_out1(126);
  
  wr_port1_out1(127) <= din_B_signed WHEN convertB_out1 = to_unsigned(16#007F#, 16) ELSE
      switch_A_out1(127);

  
  wr_port_out1(0) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0000#, 16) ELSE
      ram_out1(0);
  
  wr_port_out1(1) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0001#, 16) ELSE
      ram_out1(1);
  
  wr_port_out1(2) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0002#, 16) ELSE
      ram_out1(2);
  
  wr_port_out1(3) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0003#, 16) ELSE
      ram_out1(3);
  
  wr_port_out1(4) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0004#, 16) ELSE
      ram_out1(4);
  
  wr_port_out1(5) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0005#, 16) ELSE
      ram_out1(5);
  
  wr_port_out1(6) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0006#, 16) ELSE
      ram_out1(6);
  
  wr_port_out1(7) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0007#, 16) ELSE
      ram_out1(7);
  
  wr_port_out1(8) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0008#, 16) ELSE
      ram_out1(8);
  
  wr_port_out1(9) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0009#, 16) ELSE
      ram_out1(9);
  
  wr_port_out1(10) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#000A#, 16) ELSE
      ram_out1(10);
  
  wr_port_out1(11) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#000B#, 16) ELSE
      ram_out1(11);
  
  wr_port_out1(12) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#000C#, 16) ELSE
      ram_out1(12);
  
  wr_port_out1(13) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#000D#, 16) ELSE
      ram_out1(13);
  
  wr_port_out1(14) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#000E#, 16) ELSE
      ram_out1(14);
  
  wr_port_out1(15) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#000F#, 16) ELSE
      ram_out1(15);
  
  wr_port_out1(16) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0010#, 16) ELSE
      ram_out1(16);
  
  wr_port_out1(17) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0011#, 16) ELSE
      ram_out1(17);
  
  wr_port_out1(18) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0012#, 16) ELSE
      ram_out1(18);
  
  wr_port_out1(19) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0013#, 16) ELSE
      ram_out1(19);
  
  wr_port_out1(20) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0014#, 16) ELSE
      ram_out1(20);
  
  wr_port_out1(21) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0015#, 16) ELSE
      ram_out1(21);
  
  wr_port_out1(22) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0016#, 16) ELSE
      ram_out1(22);
  
  wr_port_out1(23) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0017#, 16) ELSE
      ram_out1(23);
  
  wr_port_out1(24) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0018#, 16) ELSE
      ram_out1(24);
  
  wr_port_out1(25) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0019#, 16) ELSE
      ram_out1(25);
  
  wr_port_out1(26) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#001A#, 16) ELSE
      ram_out1(26);
  
  wr_port_out1(27) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#001B#, 16) ELSE
      ram_out1(27);
  
  wr_port_out1(28) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#001C#, 16) ELSE
      ram_out1(28);
  
  wr_port_out1(29) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#001D#, 16) ELSE
      ram_out1(29);
  
  wr_port_out1(30) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#001E#, 16) ELSE
      ram_out1(30);
  
  wr_port_out1(31) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#001F#, 16) ELSE
      ram_out1(31);
  
  wr_port_out1(32) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0020#, 16) ELSE
      ram_out1(32);
  
  wr_port_out1(33) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0021#, 16) ELSE
      ram_out1(33);
  
  wr_port_out1(34) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0022#, 16) ELSE
      ram_out1(34);
  
  wr_port_out1(35) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0023#, 16) ELSE
      ram_out1(35);
  
  wr_port_out1(36) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0024#, 16) ELSE
      ram_out1(36);
  
  wr_port_out1(37) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0025#, 16) ELSE
      ram_out1(37);
  
  wr_port_out1(38) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0026#, 16) ELSE
      ram_out1(38);
  
  wr_port_out1(39) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0027#, 16) ELSE
      ram_out1(39);
  
  wr_port_out1(40) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0028#, 16) ELSE
      ram_out1(40);
  
  wr_port_out1(41) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0029#, 16) ELSE
      ram_out1(41);
  
  wr_port_out1(42) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#002A#, 16) ELSE
      ram_out1(42);
  
  wr_port_out1(43) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#002B#, 16) ELSE
      ram_out1(43);
  
  wr_port_out1(44) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#002C#, 16) ELSE
      ram_out1(44);
  
  wr_port_out1(45) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#002D#, 16) ELSE
      ram_out1(45);
  
  wr_port_out1(46) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#002E#, 16) ELSE
      ram_out1(46);
  
  wr_port_out1(47) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#002F#, 16) ELSE
      ram_out1(47);
  
  wr_port_out1(48) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0030#, 16) ELSE
      ram_out1(48);
  
  wr_port_out1(49) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0031#, 16) ELSE
      ram_out1(49);
  
  wr_port_out1(50) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0032#, 16) ELSE
      ram_out1(50);
  
  wr_port_out1(51) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0033#, 16) ELSE
      ram_out1(51);
  
  wr_port_out1(52) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0034#, 16) ELSE
      ram_out1(52);
  
  wr_port_out1(53) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0035#, 16) ELSE
      ram_out1(53);
  
  wr_port_out1(54) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0036#, 16) ELSE
      ram_out1(54);
  
  wr_port_out1(55) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0037#, 16) ELSE
      ram_out1(55);
  
  wr_port_out1(56) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0038#, 16) ELSE
      ram_out1(56);
  
  wr_port_out1(57) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0039#, 16) ELSE
      ram_out1(57);
  
  wr_port_out1(58) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#003A#, 16) ELSE
      ram_out1(58);
  
  wr_port_out1(59) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#003B#, 16) ELSE
      ram_out1(59);
  
  wr_port_out1(60) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#003C#, 16) ELSE
      ram_out1(60);
  
  wr_port_out1(61) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#003D#, 16) ELSE
      ram_out1(61);
  
  wr_port_out1(62) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#003E#, 16) ELSE
      ram_out1(62);
  
  wr_port_out1(63) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#003F#, 16) ELSE
      ram_out1(63);
  
  wr_port_out1(64) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0040#, 16) ELSE
      ram_out1(64);
  
  wr_port_out1(65) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0041#, 16) ELSE
      ram_out1(65);
  
  wr_port_out1(66) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0042#, 16) ELSE
      ram_out1(66);
  
  wr_port_out1(67) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0043#, 16) ELSE
      ram_out1(67);
  
  wr_port_out1(68) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0044#, 16) ELSE
      ram_out1(68);
  
  wr_port_out1(69) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0045#, 16) ELSE
      ram_out1(69);
  
  wr_port_out1(70) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0046#, 16) ELSE
      ram_out1(70);
  
  wr_port_out1(71) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0047#, 16) ELSE
      ram_out1(71);
  
  wr_port_out1(72) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0048#, 16) ELSE
      ram_out1(72);
  
  wr_port_out1(73) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0049#, 16) ELSE
      ram_out1(73);
  
  wr_port_out1(74) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#004A#, 16) ELSE
      ram_out1(74);
  
  wr_port_out1(75) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#004B#, 16) ELSE
      ram_out1(75);
  
  wr_port_out1(76) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#004C#, 16) ELSE
      ram_out1(76);
  
  wr_port_out1(77) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#004D#, 16) ELSE
      ram_out1(77);
  
  wr_port_out1(78) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#004E#, 16) ELSE
      ram_out1(78);
  
  wr_port_out1(79) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#004F#, 16) ELSE
      ram_out1(79);
  
  wr_port_out1(80) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0050#, 16) ELSE
      ram_out1(80);
  
  wr_port_out1(81) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0051#, 16) ELSE
      ram_out1(81);
  
  wr_port_out1(82) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0052#, 16) ELSE
      ram_out1(82);
  
  wr_port_out1(83) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0053#, 16) ELSE
      ram_out1(83);
  
  wr_port_out1(84) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0054#, 16) ELSE
      ram_out1(84);
  
  wr_port_out1(85) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0055#, 16) ELSE
      ram_out1(85);
  
  wr_port_out1(86) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0056#, 16) ELSE
      ram_out1(86);
  
  wr_port_out1(87) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0057#, 16) ELSE
      ram_out1(87);
  
  wr_port_out1(88) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0058#, 16) ELSE
      ram_out1(88);
  
  wr_port_out1(89) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0059#, 16) ELSE
      ram_out1(89);
  
  wr_port_out1(90) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#005A#, 16) ELSE
      ram_out1(90);
  
  wr_port_out1(91) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#005B#, 16) ELSE
      ram_out1(91);
  
  wr_port_out1(92) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#005C#, 16) ELSE
      ram_out1(92);
  
  wr_port_out1(93) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#005D#, 16) ELSE
      ram_out1(93);
  
  wr_port_out1(94) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#005E#, 16) ELSE
      ram_out1(94);
  
  wr_port_out1(95) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#005F#, 16) ELSE
      ram_out1(95);
  
  wr_port_out1(96) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0060#, 16) ELSE
      ram_out1(96);
  
  wr_port_out1(97) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0061#, 16) ELSE
      ram_out1(97);
  
  wr_port_out1(98) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0062#, 16) ELSE
      ram_out1(98);
  
  wr_port_out1(99) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0063#, 16) ELSE
      ram_out1(99);
  
  wr_port_out1(100) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0064#, 16) ELSE
      ram_out1(100);
  
  wr_port_out1(101) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0065#, 16) ELSE
      ram_out1(101);
  
  wr_port_out1(102) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0066#, 16) ELSE
      ram_out1(102);
  
  wr_port_out1(103) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0067#, 16) ELSE
      ram_out1(103);
  
  wr_port_out1(104) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0068#, 16) ELSE
      ram_out1(104);
  
  wr_port_out1(105) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0069#, 16) ELSE
      ram_out1(105);
  
  wr_port_out1(106) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#006A#, 16) ELSE
      ram_out1(106);
  
  wr_port_out1(107) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#006B#, 16) ELSE
      ram_out1(107);
  
  wr_port_out1(108) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#006C#, 16) ELSE
      ram_out1(108);
  
  wr_port_out1(109) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#006D#, 16) ELSE
      ram_out1(109);
  
  wr_port_out1(110) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#006E#, 16) ELSE
      ram_out1(110);
  
  wr_port_out1(111) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#006F#, 16) ELSE
      ram_out1(111);
  
  wr_port_out1(112) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0070#, 16) ELSE
      ram_out1(112);
  
  wr_port_out1(113) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0071#, 16) ELSE
      ram_out1(113);
  
  wr_port_out1(114) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0072#, 16) ELSE
      ram_out1(114);
  
  wr_port_out1(115) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0073#, 16) ELSE
      ram_out1(115);
  
  wr_port_out1(116) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0074#, 16) ELSE
      ram_out1(116);
  
  wr_port_out1(117) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0075#, 16) ELSE
      ram_out1(117);
  
  wr_port_out1(118) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0076#, 16) ELSE
      ram_out1(118);
  
  wr_port_out1(119) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0077#, 16) ELSE
      ram_out1(119);
  
  wr_port_out1(120) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0078#, 16) ELSE
      ram_out1(120);
  
  wr_port_out1(121) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#0079#, 16) ELSE
      ram_out1(121);
  
  wr_port_out1(122) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#007A#, 16) ELSE
      ram_out1(122);
  
  wr_port_out1(123) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#007B#, 16) ELSE
      ram_out1(123);
  
  wr_port_out1(124) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#007C#, 16) ELSE
      ram_out1(124);
  
  wr_port_out1(125) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#007D#, 16) ELSE
      ram_out1(125);
  
  wr_port_out1(126) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#007E#, 16) ELSE
      ram_out1(126);
  
  wr_port_out1(127) <= din_A_signed WHEN convertA_out1 = to_unsigned(16#007F#, 16) ELSE
      ram_out1(127);

  
  switch_A_out1 <= ram_out1 WHEN we_A = '0' ELSE
      wr_port_out1;

  
  switch_A2_out1 <= switch_A_out1 WHEN we_B = '0' ELSE
      wr_port1_out1;

  
  switch_B_out1 <= ram_out1 WHEN And_out1 = '0' ELSE
      switch_A2_out1;

  ram_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ram_out1 <= ram_data;
    ELSIF rising_edge(clk) THEN
      IF enb_1_16_0 = '1' THEN
        ram_out1 <= switch_B_out1;
      END IF;
    END IF;
  END PROCESS ram_process;


  
  select_A_out1 <= ram_out1(0) WHEN ram_data_A_out1 = to_unsigned(16#0000#, 16) ELSE
      ram_out1(1) WHEN ram_data_A_out1 = to_unsigned(16#0001#, 16) ELSE
      ram_out1(2) WHEN ram_data_A_out1 = to_unsigned(16#0002#, 16) ELSE
      ram_out1(3) WHEN ram_data_A_out1 = to_unsigned(16#0003#, 16) ELSE
      ram_out1(4) WHEN ram_data_A_out1 = to_unsigned(16#0004#, 16) ELSE
      ram_out1(5) WHEN ram_data_A_out1 = to_unsigned(16#0005#, 16) ELSE
      ram_out1(6) WHEN ram_data_A_out1 = to_unsigned(16#0006#, 16) ELSE
      ram_out1(7) WHEN ram_data_A_out1 = to_unsigned(16#0007#, 16) ELSE
      ram_out1(8) WHEN ram_data_A_out1 = to_unsigned(16#0008#, 16) ELSE
      ram_out1(9) WHEN ram_data_A_out1 = to_unsigned(16#0009#, 16) ELSE
      ram_out1(10) WHEN ram_data_A_out1 = to_unsigned(16#000A#, 16) ELSE
      ram_out1(11) WHEN ram_data_A_out1 = to_unsigned(16#000B#, 16) ELSE
      ram_out1(12) WHEN ram_data_A_out1 = to_unsigned(16#000C#, 16) ELSE
      ram_out1(13) WHEN ram_data_A_out1 = to_unsigned(16#000D#, 16) ELSE
      ram_out1(14) WHEN ram_data_A_out1 = to_unsigned(16#000E#, 16) ELSE
      ram_out1(15) WHEN ram_data_A_out1 = to_unsigned(16#000F#, 16) ELSE
      ram_out1(16) WHEN ram_data_A_out1 = to_unsigned(16#0010#, 16) ELSE
      ram_out1(17) WHEN ram_data_A_out1 = to_unsigned(16#0011#, 16) ELSE
      ram_out1(18) WHEN ram_data_A_out1 = to_unsigned(16#0012#, 16) ELSE
      ram_out1(19) WHEN ram_data_A_out1 = to_unsigned(16#0013#, 16) ELSE
      ram_out1(20) WHEN ram_data_A_out1 = to_unsigned(16#0014#, 16) ELSE
      ram_out1(21) WHEN ram_data_A_out1 = to_unsigned(16#0015#, 16) ELSE
      ram_out1(22) WHEN ram_data_A_out1 = to_unsigned(16#0016#, 16) ELSE
      ram_out1(23) WHEN ram_data_A_out1 = to_unsigned(16#0017#, 16) ELSE
      ram_out1(24) WHEN ram_data_A_out1 = to_unsigned(16#0018#, 16) ELSE
      ram_out1(25) WHEN ram_data_A_out1 = to_unsigned(16#0019#, 16) ELSE
      ram_out1(26) WHEN ram_data_A_out1 = to_unsigned(16#001A#, 16) ELSE
      ram_out1(27) WHEN ram_data_A_out1 = to_unsigned(16#001B#, 16) ELSE
      ram_out1(28) WHEN ram_data_A_out1 = to_unsigned(16#001C#, 16) ELSE
      ram_out1(29) WHEN ram_data_A_out1 = to_unsigned(16#001D#, 16) ELSE
      ram_out1(30) WHEN ram_data_A_out1 = to_unsigned(16#001E#, 16) ELSE
      ram_out1(31) WHEN ram_data_A_out1 = to_unsigned(16#001F#, 16) ELSE
      ram_out1(32) WHEN ram_data_A_out1 = to_unsigned(16#0020#, 16) ELSE
      ram_out1(33) WHEN ram_data_A_out1 = to_unsigned(16#0021#, 16) ELSE
      ram_out1(34) WHEN ram_data_A_out1 = to_unsigned(16#0022#, 16) ELSE
      ram_out1(35) WHEN ram_data_A_out1 = to_unsigned(16#0023#, 16) ELSE
      ram_out1(36) WHEN ram_data_A_out1 = to_unsigned(16#0024#, 16) ELSE
      ram_out1(37) WHEN ram_data_A_out1 = to_unsigned(16#0025#, 16) ELSE
      ram_out1(38) WHEN ram_data_A_out1 = to_unsigned(16#0026#, 16) ELSE
      ram_out1(39) WHEN ram_data_A_out1 = to_unsigned(16#0027#, 16) ELSE
      ram_out1(40) WHEN ram_data_A_out1 = to_unsigned(16#0028#, 16) ELSE
      ram_out1(41) WHEN ram_data_A_out1 = to_unsigned(16#0029#, 16) ELSE
      ram_out1(42) WHEN ram_data_A_out1 = to_unsigned(16#002A#, 16) ELSE
      ram_out1(43) WHEN ram_data_A_out1 = to_unsigned(16#002B#, 16) ELSE
      ram_out1(44) WHEN ram_data_A_out1 = to_unsigned(16#002C#, 16) ELSE
      ram_out1(45) WHEN ram_data_A_out1 = to_unsigned(16#002D#, 16) ELSE
      ram_out1(46) WHEN ram_data_A_out1 = to_unsigned(16#002E#, 16) ELSE
      ram_out1(47) WHEN ram_data_A_out1 = to_unsigned(16#002F#, 16) ELSE
      ram_out1(48) WHEN ram_data_A_out1 = to_unsigned(16#0030#, 16) ELSE
      ram_out1(49) WHEN ram_data_A_out1 = to_unsigned(16#0031#, 16) ELSE
      ram_out1(50) WHEN ram_data_A_out1 = to_unsigned(16#0032#, 16) ELSE
      ram_out1(51) WHEN ram_data_A_out1 = to_unsigned(16#0033#, 16) ELSE
      ram_out1(52) WHEN ram_data_A_out1 = to_unsigned(16#0034#, 16) ELSE
      ram_out1(53) WHEN ram_data_A_out1 = to_unsigned(16#0035#, 16) ELSE
      ram_out1(54) WHEN ram_data_A_out1 = to_unsigned(16#0036#, 16) ELSE
      ram_out1(55) WHEN ram_data_A_out1 = to_unsigned(16#0037#, 16) ELSE
      ram_out1(56) WHEN ram_data_A_out1 = to_unsigned(16#0038#, 16) ELSE
      ram_out1(57) WHEN ram_data_A_out1 = to_unsigned(16#0039#, 16) ELSE
      ram_out1(58) WHEN ram_data_A_out1 = to_unsigned(16#003A#, 16) ELSE
      ram_out1(59) WHEN ram_data_A_out1 = to_unsigned(16#003B#, 16) ELSE
      ram_out1(60) WHEN ram_data_A_out1 = to_unsigned(16#003C#, 16) ELSE
      ram_out1(61) WHEN ram_data_A_out1 = to_unsigned(16#003D#, 16) ELSE
      ram_out1(62) WHEN ram_data_A_out1 = to_unsigned(16#003E#, 16) ELSE
      ram_out1(63) WHEN ram_data_A_out1 = to_unsigned(16#003F#, 16) ELSE
      ram_out1(64) WHEN ram_data_A_out1 = to_unsigned(16#0040#, 16) ELSE
      ram_out1(65) WHEN ram_data_A_out1 = to_unsigned(16#0041#, 16) ELSE
      ram_out1(66) WHEN ram_data_A_out1 = to_unsigned(16#0042#, 16) ELSE
      ram_out1(67) WHEN ram_data_A_out1 = to_unsigned(16#0043#, 16) ELSE
      ram_out1(68) WHEN ram_data_A_out1 = to_unsigned(16#0044#, 16) ELSE
      ram_out1(69) WHEN ram_data_A_out1 = to_unsigned(16#0045#, 16) ELSE
      ram_out1(70) WHEN ram_data_A_out1 = to_unsigned(16#0046#, 16) ELSE
      ram_out1(71) WHEN ram_data_A_out1 = to_unsigned(16#0047#, 16) ELSE
      ram_out1(72) WHEN ram_data_A_out1 = to_unsigned(16#0048#, 16) ELSE
      ram_out1(73) WHEN ram_data_A_out1 = to_unsigned(16#0049#, 16) ELSE
      ram_out1(74) WHEN ram_data_A_out1 = to_unsigned(16#004A#, 16) ELSE
      ram_out1(75) WHEN ram_data_A_out1 = to_unsigned(16#004B#, 16) ELSE
      ram_out1(76) WHEN ram_data_A_out1 = to_unsigned(16#004C#, 16) ELSE
      ram_out1(77) WHEN ram_data_A_out1 = to_unsigned(16#004D#, 16) ELSE
      ram_out1(78) WHEN ram_data_A_out1 = to_unsigned(16#004E#, 16) ELSE
      ram_out1(79) WHEN ram_data_A_out1 = to_unsigned(16#004F#, 16) ELSE
      ram_out1(80) WHEN ram_data_A_out1 = to_unsigned(16#0050#, 16) ELSE
      ram_out1(81) WHEN ram_data_A_out1 = to_unsigned(16#0051#, 16) ELSE
      ram_out1(82) WHEN ram_data_A_out1 = to_unsigned(16#0052#, 16) ELSE
      ram_out1(83) WHEN ram_data_A_out1 = to_unsigned(16#0053#, 16) ELSE
      ram_out1(84) WHEN ram_data_A_out1 = to_unsigned(16#0054#, 16) ELSE
      ram_out1(85) WHEN ram_data_A_out1 = to_unsigned(16#0055#, 16) ELSE
      ram_out1(86) WHEN ram_data_A_out1 = to_unsigned(16#0056#, 16) ELSE
      ram_out1(87) WHEN ram_data_A_out1 = to_unsigned(16#0057#, 16) ELSE
      ram_out1(88) WHEN ram_data_A_out1 = to_unsigned(16#0058#, 16) ELSE
      ram_out1(89) WHEN ram_data_A_out1 = to_unsigned(16#0059#, 16) ELSE
      ram_out1(90) WHEN ram_data_A_out1 = to_unsigned(16#005A#, 16) ELSE
      ram_out1(91) WHEN ram_data_A_out1 = to_unsigned(16#005B#, 16) ELSE
      ram_out1(92) WHEN ram_data_A_out1 = to_unsigned(16#005C#, 16) ELSE
      ram_out1(93) WHEN ram_data_A_out1 = to_unsigned(16#005D#, 16) ELSE
      ram_out1(94) WHEN ram_data_A_out1 = to_unsigned(16#005E#, 16) ELSE
      ram_out1(95) WHEN ram_data_A_out1 = to_unsigned(16#005F#, 16) ELSE
      ram_out1(96) WHEN ram_data_A_out1 = to_unsigned(16#0060#, 16) ELSE
      ram_out1(97) WHEN ram_data_A_out1 = to_unsigned(16#0061#, 16) ELSE
      ram_out1(98) WHEN ram_data_A_out1 = to_unsigned(16#0062#, 16) ELSE
      ram_out1(99) WHEN ram_data_A_out1 = to_unsigned(16#0063#, 16) ELSE
      ram_out1(100) WHEN ram_data_A_out1 = to_unsigned(16#0064#, 16) ELSE
      ram_out1(101) WHEN ram_data_A_out1 = to_unsigned(16#0065#, 16) ELSE
      ram_out1(102) WHEN ram_data_A_out1 = to_unsigned(16#0066#, 16) ELSE
      ram_out1(103) WHEN ram_data_A_out1 = to_unsigned(16#0067#, 16) ELSE
      ram_out1(104) WHEN ram_data_A_out1 = to_unsigned(16#0068#, 16) ELSE
      ram_out1(105) WHEN ram_data_A_out1 = to_unsigned(16#0069#, 16) ELSE
      ram_out1(106) WHEN ram_data_A_out1 = to_unsigned(16#006A#, 16) ELSE
      ram_out1(107) WHEN ram_data_A_out1 = to_unsigned(16#006B#, 16) ELSE
      ram_out1(108) WHEN ram_data_A_out1 = to_unsigned(16#006C#, 16) ELSE
      ram_out1(109) WHEN ram_data_A_out1 = to_unsigned(16#006D#, 16) ELSE
      ram_out1(110) WHEN ram_data_A_out1 = to_unsigned(16#006E#, 16) ELSE
      ram_out1(111) WHEN ram_data_A_out1 = to_unsigned(16#006F#, 16) ELSE
      ram_out1(112) WHEN ram_data_A_out1 = to_unsigned(16#0070#, 16) ELSE
      ram_out1(113) WHEN ram_data_A_out1 = to_unsigned(16#0071#, 16) ELSE
      ram_out1(114) WHEN ram_data_A_out1 = to_unsigned(16#0072#, 16) ELSE
      ram_out1(115) WHEN ram_data_A_out1 = to_unsigned(16#0073#, 16) ELSE
      ram_out1(116) WHEN ram_data_A_out1 = to_unsigned(16#0074#, 16) ELSE
      ram_out1(117) WHEN ram_data_A_out1 = to_unsigned(16#0075#, 16) ELSE
      ram_out1(118) WHEN ram_data_A_out1 = to_unsigned(16#0076#, 16) ELSE
      ram_out1(119) WHEN ram_data_A_out1 = to_unsigned(16#0077#, 16) ELSE
      ram_out1(120) WHEN ram_data_A_out1 = to_unsigned(16#0078#, 16) ELSE
      ram_out1(121) WHEN ram_data_A_out1 = to_unsigned(16#0079#, 16) ELSE
      ram_out1(122) WHEN ram_data_A_out1 = to_unsigned(16#007A#, 16) ELSE
      ram_out1(123) WHEN ram_data_A_out1 = to_unsigned(16#007B#, 16) ELSE
      ram_out1(124) WHEN ram_data_A_out1 = to_unsigned(16#007C#, 16) ELSE
      ram_out1(125) WHEN ram_data_A_out1 = to_unsigned(16#007D#, 16) ELSE
      ram_out1(126) WHEN ram_data_A_out1 = to_unsigned(16#007E#, 16) ELSE
      ram_out1(127);

  ram_data_B_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ram_data_B_out1 <= to_unsigned(16#0000#, 16);
    ELSIF rising_edge(clk) THEN
      IF enb_1_16_0 = '1' THEN
        ram_data_B_out1 <= convertB_out1;
      END IF;
    END IF;
  END PROCESS ram_data_B_process;


  
  select_B_out1 <= ram_out1(0) WHEN ram_data_B_out1 = to_unsigned(16#0000#, 16) ELSE
      ram_out1(1) WHEN ram_data_B_out1 = to_unsigned(16#0001#, 16) ELSE
      ram_out1(2) WHEN ram_data_B_out1 = to_unsigned(16#0002#, 16) ELSE
      ram_out1(3) WHEN ram_data_B_out1 = to_unsigned(16#0003#, 16) ELSE
      ram_out1(4) WHEN ram_data_B_out1 = to_unsigned(16#0004#, 16) ELSE
      ram_out1(5) WHEN ram_data_B_out1 = to_unsigned(16#0005#, 16) ELSE
      ram_out1(6) WHEN ram_data_B_out1 = to_unsigned(16#0006#, 16) ELSE
      ram_out1(7) WHEN ram_data_B_out1 = to_unsigned(16#0007#, 16) ELSE
      ram_out1(8) WHEN ram_data_B_out1 = to_unsigned(16#0008#, 16) ELSE
      ram_out1(9) WHEN ram_data_B_out1 = to_unsigned(16#0009#, 16) ELSE
      ram_out1(10) WHEN ram_data_B_out1 = to_unsigned(16#000A#, 16) ELSE
      ram_out1(11) WHEN ram_data_B_out1 = to_unsigned(16#000B#, 16) ELSE
      ram_out1(12) WHEN ram_data_B_out1 = to_unsigned(16#000C#, 16) ELSE
      ram_out1(13) WHEN ram_data_B_out1 = to_unsigned(16#000D#, 16) ELSE
      ram_out1(14) WHEN ram_data_B_out1 = to_unsigned(16#000E#, 16) ELSE
      ram_out1(15) WHEN ram_data_B_out1 = to_unsigned(16#000F#, 16) ELSE
      ram_out1(16) WHEN ram_data_B_out1 = to_unsigned(16#0010#, 16) ELSE
      ram_out1(17) WHEN ram_data_B_out1 = to_unsigned(16#0011#, 16) ELSE
      ram_out1(18) WHEN ram_data_B_out1 = to_unsigned(16#0012#, 16) ELSE
      ram_out1(19) WHEN ram_data_B_out1 = to_unsigned(16#0013#, 16) ELSE
      ram_out1(20) WHEN ram_data_B_out1 = to_unsigned(16#0014#, 16) ELSE
      ram_out1(21) WHEN ram_data_B_out1 = to_unsigned(16#0015#, 16) ELSE
      ram_out1(22) WHEN ram_data_B_out1 = to_unsigned(16#0016#, 16) ELSE
      ram_out1(23) WHEN ram_data_B_out1 = to_unsigned(16#0017#, 16) ELSE
      ram_out1(24) WHEN ram_data_B_out1 = to_unsigned(16#0018#, 16) ELSE
      ram_out1(25) WHEN ram_data_B_out1 = to_unsigned(16#0019#, 16) ELSE
      ram_out1(26) WHEN ram_data_B_out1 = to_unsigned(16#001A#, 16) ELSE
      ram_out1(27) WHEN ram_data_B_out1 = to_unsigned(16#001B#, 16) ELSE
      ram_out1(28) WHEN ram_data_B_out1 = to_unsigned(16#001C#, 16) ELSE
      ram_out1(29) WHEN ram_data_B_out1 = to_unsigned(16#001D#, 16) ELSE
      ram_out1(30) WHEN ram_data_B_out1 = to_unsigned(16#001E#, 16) ELSE
      ram_out1(31) WHEN ram_data_B_out1 = to_unsigned(16#001F#, 16) ELSE
      ram_out1(32) WHEN ram_data_B_out1 = to_unsigned(16#0020#, 16) ELSE
      ram_out1(33) WHEN ram_data_B_out1 = to_unsigned(16#0021#, 16) ELSE
      ram_out1(34) WHEN ram_data_B_out1 = to_unsigned(16#0022#, 16) ELSE
      ram_out1(35) WHEN ram_data_B_out1 = to_unsigned(16#0023#, 16) ELSE
      ram_out1(36) WHEN ram_data_B_out1 = to_unsigned(16#0024#, 16) ELSE
      ram_out1(37) WHEN ram_data_B_out1 = to_unsigned(16#0025#, 16) ELSE
      ram_out1(38) WHEN ram_data_B_out1 = to_unsigned(16#0026#, 16) ELSE
      ram_out1(39) WHEN ram_data_B_out1 = to_unsigned(16#0027#, 16) ELSE
      ram_out1(40) WHEN ram_data_B_out1 = to_unsigned(16#0028#, 16) ELSE
      ram_out1(41) WHEN ram_data_B_out1 = to_unsigned(16#0029#, 16) ELSE
      ram_out1(42) WHEN ram_data_B_out1 = to_unsigned(16#002A#, 16) ELSE
      ram_out1(43) WHEN ram_data_B_out1 = to_unsigned(16#002B#, 16) ELSE
      ram_out1(44) WHEN ram_data_B_out1 = to_unsigned(16#002C#, 16) ELSE
      ram_out1(45) WHEN ram_data_B_out1 = to_unsigned(16#002D#, 16) ELSE
      ram_out1(46) WHEN ram_data_B_out1 = to_unsigned(16#002E#, 16) ELSE
      ram_out1(47) WHEN ram_data_B_out1 = to_unsigned(16#002F#, 16) ELSE
      ram_out1(48) WHEN ram_data_B_out1 = to_unsigned(16#0030#, 16) ELSE
      ram_out1(49) WHEN ram_data_B_out1 = to_unsigned(16#0031#, 16) ELSE
      ram_out1(50) WHEN ram_data_B_out1 = to_unsigned(16#0032#, 16) ELSE
      ram_out1(51) WHEN ram_data_B_out1 = to_unsigned(16#0033#, 16) ELSE
      ram_out1(52) WHEN ram_data_B_out1 = to_unsigned(16#0034#, 16) ELSE
      ram_out1(53) WHEN ram_data_B_out1 = to_unsigned(16#0035#, 16) ELSE
      ram_out1(54) WHEN ram_data_B_out1 = to_unsigned(16#0036#, 16) ELSE
      ram_out1(55) WHEN ram_data_B_out1 = to_unsigned(16#0037#, 16) ELSE
      ram_out1(56) WHEN ram_data_B_out1 = to_unsigned(16#0038#, 16) ELSE
      ram_out1(57) WHEN ram_data_B_out1 = to_unsigned(16#0039#, 16) ELSE
      ram_out1(58) WHEN ram_data_B_out1 = to_unsigned(16#003A#, 16) ELSE
      ram_out1(59) WHEN ram_data_B_out1 = to_unsigned(16#003B#, 16) ELSE
      ram_out1(60) WHEN ram_data_B_out1 = to_unsigned(16#003C#, 16) ELSE
      ram_out1(61) WHEN ram_data_B_out1 = to_unsigned(16#003D#, 16) ELSE
      ram_out1(62) WHEN ram_data_B_out1 = to_unsigned(16#003E#, 16) ELSE
      ram_out1(63) WHEN ram_data_B_out1 = to_unsigned(16#003F#, 16) ELSE
      ram_out1(64) WHEN ram_data_B_out1 = to_unsigned(16#0040#, 16) ELSE
      ram_out1(65) WHEN ram_data_B_out1 = to_unsigned(16#0041#, 16) ELSE
      ram_out1(66) WHEN ram_data_B_out1 = to_unsigned(16#0042#, 16) ELSE
      ram_out1(67) WHEN ram_data_B_out1 = to_unsigned(16#0043#, 16) ELSE
      ram_out1(68) WHEN ram_data_B_out1 = to_unsigned(16#0044#, 16) ELSE
      ram_out1(69) WHEN ram_data_B_out1 = to_unsigned(16#0045#, 16) ELSE
      ram_out1(70) WHEN ram_data_B_out1 = to_unsigned(16#0046#, 16) ELSE
      ram_out1(71) WHEN ram_data_B_out1 = to_unsigned(16#0047#, 16) ELSE
      ram_out1(72) WHEN ram_data_B_out1 = to_unsigned(16#0048#, 16) ELSE
      ram_out1(73) WHEN ram_data_B_out1 = to_unsigned(16#0049#, 16) ELSE
      ram_out1(74) WHEN ram_data_B_out1 = to_unsigned(16#004A#, 16) ELSE
      ram_out1(75) WHEN ram_data_B_out1 = to_unsigned(16#004B#, 16) ELSE
      ram_out1(76) WHEN ram_data_B_out1 = to_unsigned(16#004C#, 16) ELSE
      ram_out1(77) WHEN ram_data_B_out1 = to_unsigned(16#004D#, 16) ELSE
      ram_out1(78) WHEN ram_data_B_out1 = to_unsigned(16#004E#, 16) ELSE
      ram_out1(79) WHEN ram_data_B_out1 = to_unsigned(16#004F#, 16) ELSE
      ram_out1(80) WHEN ram_data_B_out1 = to_unsigned(16#0050#, 16) ELSE
      ram_out1(81) WHEN ram_data_B_out1 = to_unsigned(16#0051#, 16) ELSE
      ram_out1(82) WHEN ram_data_B_out1 = to_unsigned(16#0052#, 16) ELSE
      ram_out1(83) WHEN ram_data_B_out1 = to_unsigned(16#0053#, 16) ELSE
      ram_out1(84) WHEN ram_data_B_out1 = to_unsigned(16#0054#, 16) ELSE
      ram_out1(85) WHEN ram_data_B_out1 = to_unsigned(16#0055#, 16) ELSE
      ram_out1(86) WHEN ram_data_B_out1 = to_unsigned(16#0056#, 16) ELSE
      ram_out1(87) WHEN ram_data_B_out1 = to_unsigned(16#0057#, 16) ELSE
      ram_out1(88) WHEN ram_data_B_out1 = to_unsigned(16#0058#, 16) ELSE
      ram_out1(89) WHEN ram_data_B_out1 = to_unsigned(16#0059#, 16) ELSE
      ram_out1(90) WHEN ram_data_B_out1 = to_unsigned(16#005A#, 16) ELSE
      ram_out1(91) WHEN ram_data_B_out1 = to_unsigned(16#005B#, 16) ELSE
      ram_out1(92) WHEN ram_data_B_out1 = to_unsigned(16#005C#, 16) ELSE
      ram_out1(93) WHEN ram_data_B_out1 = to_unsigned(16#005D#, 16) ELSE
      ram_out1(94) WHEN ram_data_B_out1 = to_unsigned(16#005E#, 16) ELSE
      ram_out1(95) WHEN ram_data_B_out1 = to_unsigned(16#005F#, 16) ELSE
      ram_out1(96) WHEN ram_data_B_out1 = to_unsigned(16#0060#, 16) ELSE
      ram_out1(97) WHEN ram_data_B_out1 = to_unsigned(16#0061#, 16) ELSE
      ram_out1(98) WHEN ram_data_B_out1 = to_unsigned(16#0062#, 16) ELSE
      ram_out1(99) WHEN ram_data_B_out1 = to_unsigned(16#0063#, 16) ELSE
      ram_out1(100) WHEN ram_data_B_out1 = to_unsigned(16#0064#, 16) ELSE
      ram_out1(101) WHEN ram_data_B_out1 = to_unsigned(16#0065#, 16) ELSE
      ram_out1(102) WHEN ram_data_B_out1 = to_unsigned(16#0066#, 16) ELSE
      ram_out1(103) WHEN ram_data_B_out1 = to_unsigned(16#0067#, 16) ELSE
      ram_out1(104) WHEN ram_data_B_out1 = to_unsigned(16#0068#, 16) ELSE
      ram_out1(105) WHEN ram_data_B_out1 = to_unsigned(16#0069#, 16) ELSE
      ram_out1(106) WHEN ram_data_B_out1 = to_unsigned(16#006A#, 16) ELSE
      ram_out1(107) WHEN ram_data_B_out1 = to_unsigned(16#006B#, 16) ELSE
      ram_out1(108) WHEN ram_data_B_out1 = to_unsigned(16#006C#, 16) ELSE
      ram_out1(109) WHEN ram_data_B_out1 = to_unsigned(16#006D#, 16) ELSE
      ram_out1(110) WHEN ram_data_B_out1 = to_unsigned(16#006E#, 16) ELSE
      ram_out1(111) WHEN ram_data_B_out1 = to_unsigned(16#006F#, 16) ELSE
      ram_out1(112) WHEN ram_data_B_out1 = to_unsigned(16#0070#, 16) ELSE
      ram_out1(113) WHEN ram_data_B_out1 = to_unsigned(16#0071#, 16) ELSE
      ram_out1(114) WHEN ram_data_B_out1 = to_unsigned(16#0072#, 16) ELSE
      ram_out1(115) WHEN ram_data_B_out1 = to_unsigned(16#0073#, 16) ELSE
      ram_out1(116) WHEN ram_data_B_out1 = to_unsigned(16#0074#, 16) ELSE
      ram_out1(117) WHEN ram_data_B_out1 = to_unsigned(16#0075#, 16) ELSE
      ram_out1(118) WHEN ram_data_B_out1 = to_unsigned(16#0076#, 16) ELSE
      ram_out1(119) WHEN ram_data_B_out1 = to_unsigned(16#0077#, 16) ELSE
      ram_out1(120) WHEN ram_data_B_out1 = to_unsigned(16#0078#, 16) ELSE
      ram_out1(121) WHEN ram_data_B_out1 = to_unsigned(16#0079#, 16) ELSE
      ram_out1(122) WHEN ram_data_B_out1 = to_unsigned(16#007A#, 16) ELSE
      ram_out1(123) WHEN ram_data_B_out1 = to_unsigned(16#007B#, 16) ELSE
      ram_out1(124) WHEN ram_data_B_out1 = to_unsigned(16#007C#, 16) ELSE
      ram_out1(125) WHEN ram_data_B_out1 = to_unsigned(16#007D#, 16) ELSE
      ram_out1(126) WHEN ram_data_B_out1 = to_unsigned(16#007E#, 16) ELSE
      ram_out1(127);



  dout_A <= Data_Type_Conversion_Inherited_A_out1;

  dout_B <= Data_Type_Conversion_Inherited_B_out1;

END rtl;

