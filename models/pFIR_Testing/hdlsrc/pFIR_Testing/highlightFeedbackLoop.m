open_system('pFIR_Testing');
open_system('gm_pFIR_Testing');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Left Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/Sum_memory', 'user1');
hilite_system('pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Left Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/Sum_memory', 'user1');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Left Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/Reset_Switch', 'user1');
hilite_system('pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Left Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/Reset_Switch', 'user1');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Left Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/Multiply-Add', 'user1');
hilite_system('pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Left Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/Multiply-Add', 'user1');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Left Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/convertB', 'user1');
hilite_system('pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Left Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/convertB', 'user1');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Right Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/Sum_memory', 'user1');
hilite_system('pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Right Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/Sum_memory', 'user1');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Right Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/Reset_Switch', 'user1');
hilite_system('pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Right Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/Reset_Switch', 'user1');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Right Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/Multiply-Add', 'user1');
hilite_system('pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Right Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/Multiply-Add', 'user1');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Right Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/convertB', 'user1');
hilite_system('pFIR_Testing/dataplane/Test FIR with Custom FIR Libraries Sample Based Filtering/Right Channel Processing/Programmable Upclocked FIR/Multiply_And_Sum/convertB', 'user1');
