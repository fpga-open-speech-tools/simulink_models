-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\wickh\Documents\NIH\simulink_models\models\noise_suppression\hdlsrc\noise_suppression\noise_suppression_Reciprocal2.vhd
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: noise_suppression_Reciprocal2
-- Source Path: Reciprocal2
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY noise_suppression_Reciprocal2 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        recip_in                          :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En20
        recip_out                         :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En2
        );
END noise_suppression_Reciprocal2;


ARCHITECTURE rtl OF noise_suppression_Reciprocal2 IS

  -- Signals
  SIGNAL trueFlag_1                       : std_logic;  -- ufix1
  SIGNAL latencyValueConstantSignal       : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL initFlagAddDataOut               : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL initFlagAddDataOutDelay_1        : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Relational_Operator_relop1       : std_logic;
  SIGNAL initFlagDelay_1                  : std_logic;  -- ufix1
  SIGNAL initFlagDelayData                : std_logic;  -- ufix1
  SIGNAL initFlagDelayData_1              : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL constant_z                       : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL corrected_z_p_1                  : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL recip_in_signed                  : signed(23 DOWNTO 0);  -- sfix24_En20
  SIGNAL recip_in_reg                     : signed(23 DOWNTO 0);  -- sfix24_En20
  SIGNAL d_ext                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL Rin_MSB                          : std_logic;  -- ufix1
  SIGNAL Unary_Minus_in0                  : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL unary_minus_d                    : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL corrected_d                      : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL corrected_d_p_1                  : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_add_cast               : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1                    : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_1             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_1                 : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r1                               : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d1                               : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r1_p                             : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d1_p                             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y                      : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_2                 : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_1                  : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_2             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_3                 : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r2                               : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d2                               : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r2_p                             : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d2_p                             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_1                    : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_4                 : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_2                  : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_3             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_5                 : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r3                               : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d3                               : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r3_p                             : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d3_p                             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_2                    : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_6                 : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_3                  : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_4             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_7                 : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r4                               : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d4                               : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r4_p                             : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d4_p                             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_3                    : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_8                 : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_4                  : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_5             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_9                 : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r5                               : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d5                               : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r5_p                             : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d5_p                             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_4                    : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_10                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_5                  : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_6             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_11                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r6                               : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d6                               : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r6_p                             : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d6_p                             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_5                    : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_12                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_6                  : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_7             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_13                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r7                               : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d7                               : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r7_p                             : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d7_p                             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_6                    : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_14                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_7                  : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_8             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_15                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r8                               : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d8                               : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r8_p                             : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d8_p                             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_7                    : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_16                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_8                  : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_9             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_17                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r9                               : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d9                               : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r9_p                             : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d9_p                             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_8                    : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_18                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_9                  : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_10            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_19                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r10                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d10                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r10_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d10_p                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_9                    : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_20                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_10                 : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_11            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_21                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r11                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d11                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r11_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d11_p                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_10                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_22                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_11                 : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_12            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_23                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r12                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d12                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r12_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d12_p                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_11                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_24                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_12                 : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_13            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_25                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r13                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d13                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r13_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d13_p                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_12                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_26                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_13                 : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_14            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_27                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r14                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d14                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r14_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d14_p                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_13                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_28                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_14                 : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_15            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_29                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r15                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d15                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r15_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d15_p                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_14                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_30                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_15                 : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_16            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_31                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r16                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d16                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r16_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d16_p                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_15                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_32                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_16                 : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_17            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_33                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r17                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d17                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r17_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d17_p                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_16                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_34                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_17                 : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_18            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_35                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r18                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d18                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r18_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d18_p                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_17                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_36                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_18                 : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_19            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_37                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r19                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d19                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r19_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d19_p                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_18                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_38                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_19                 : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_20            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_39                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r20                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d20                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r20_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d20_p                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_19                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_40                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_20                 : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_21            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_41                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r21                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d21                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r21_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d21_p                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_20                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_42                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_21                 : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_22            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_43                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r22                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d22                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r22_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d22_p                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_21                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_44                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_22                 : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_23            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_45                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r23                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d23                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r23_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d23_p                            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_y_22                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_46                : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_in1_23                 : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL iteration_add_cast_24            : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL iteration_temp_47                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL r24                              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL d24                              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL r24_p                            : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL qTemp                            : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL qtempExt                         : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL qtempExt_p_1                     : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL signFlag_p_reg                   : std_logic_vector(0 TO 25);  -- ufix1 [26]
  SIGNAL signFlag_p_reg_next              : std_logic_vector(0 TO 25);  -- ufix1 [26]
  SIGNAL signFlag_p_1                     : std_logic;  -- ufix1
  SIGNAL postcorrection_qtemp             : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL postcorrection_sel               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL postcorrection_in0               : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL qtempPost                        : signed(23 DOWNTO 0);  -- sfix24
  SIGNAL ConstantSignal_1                 : signed(23 DOWNTO 0);  -- sfix24
  SIGNAL qtempPost_1                      : signed(23 DOWNTO 0);  -- sfix24
  SIGNAL qtempPost_2                      : signed(23 DOWNTO 0);  -- sfix24_En2
  SIGNAL recip_out_tmp                    : signed(23 DOWNTO 0);  -- sfix24_En2

BEGIN
  trueFlag_1 <= '1';

  latencyValueConstantSignal <= to_unsigned(16#1B#, 5);

  initFlagAddDataOutDelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      initFlagAddDataOutDelay_1 <= to_unsigned(16#01#, 5);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        initFlagAddDataOutDelay_1 <= initFlagAddDataOut;
      END IF;
    END IF;
  END PROCESS initFlagAddDataOutDelay_process;


  initFlagDelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      initFlagDelay_1 <= '0';
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        initFlagDelay_1 <= Relational_Operator_relop1;
      END IF;
    END IF;
  END PROCESS initFlagDelay_process;


  initFlagDelayData <= initFlagDelay_1 AND trueFlag_1;

  initFlagDelayData_1 <= '0' & '0' & '0' & '0' & initFlagDelayData;

  initFlagAddDataOut <= initFlagDelayData_1 + initFlagAddDataOutDelay_1;

  
  Relational_Operator_relop1 <= '1' WHEN initFlagAddDataOut <= latencyValueConstantSignal ELSE
      '0';

  constant_z <= to_signed(4194304, 48);

  corrected_z_p_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      corrected_z_p_1 <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        corrected_z_p_1 <= constant_z;
      END IF;
    END IF;
  END PROCESS corrected_z_p_process;


  recip_in_signed <= signed(recip_in);

  Rin_p_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      recip_in_reg <= to_signed(16#000000#, 24);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        recip_in_reg <= recip_in_signed;
      END IF;
    END IF;
  END PROCESS Rin_p_process;


  d_ext <= resize(recip_in_reg, 25);

  Rin_MSB <= d_ext(24);

  Unary_Minus_in0 <=  - (resize(d_ext, 26));
  unary_minus_d <= Unary_Minus_in0(24 DOWNTO 0);

  
  corrected_d <= d_ext WHEN Rin_MSB = '0' ELSE
      unary_minus_d;

  corrected_d_p_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      corrected_d_p_1 <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        corrected_d_p_1 <= corrected_d;
      END IF;
    END IF;
  END PROCESS corrected_d_p_process;


  -- non Restore iteration stage 1
  iteration_add_cast <= signed(corrected_z_p_1(47 DOWNTO 23));
  iteration_in1 <=  - (resize(corrected_d_p_1, 26));
  iteration_add_cast_1 <= iteration_in1(24 DOWNTO 0);
  iteration_temp <= iteration_add_cast + iteration_add_cast_1;
  iteration_temp_1 <= unsigned(iteration_temp(23 DOWNTO 0) & corrected_z_p_1(22 DOWNTO 0) &  NOT iteration_temp(23));
  r1 <= signed(iteration_temp_1);
  d1 <= corrected_d_p_1;

  r_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r1_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r1_p <= r1;
      END IF;
    END IF;
  END PROCESS r_reg_process;


  d_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d1_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d1_p <= d1;
      END IF;
    END IF;
  END PROCESS d_reg_process;


  -- non Restore iteration stage 2
  iteration_in1_1 <=  - (resize(d1_p, 26));
  
  iteration_y <= d1_p WHEN ( NOT r1_p(47)) = '0' ELSE
      iteration_in1_1(24 DOWNTO 0);
  iteration_add_cast_2 <= signed(r1_p(47 DOWNTO 23));
  iteration_temp_2 <= iteration_add_cast_2 + iteration_y;
  iteration_temp_3 <= unsigned(iteration_temp_2(23 DOWNTO 0) & r1_p(22 DOWNTO 0) &  NOT iteration_temp_2(23));
  r2 <= signed(iteration_temp_3);
  d2 <= d1_p;

  r_reg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r2_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r2_p <= r2;
      END IF;
    END IF;
  END PROCESS r_reg_1_process;


  d_reg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d2_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d2_p <= d2;
      END IF;
    END IF;
  END PROCESS d_reg_1_process;


  -- non Restore iteration stage 3
  iteration_in1_2 <=  - (resize(d2_p, 26));
  
  iteration_y_1 <= d2_p WHEN ( NOT r2_p(47)) = '0' ELSE
      iteration_in1_2(24 DOWNTO 0);
  iteration_add_cast_3 <= signed(r2_p(47 DOWNTO 23));
  iteration_temp_4 <= iteration_add_cast_3 + iteration_y_1;
  iteration_temp_5 <= unsigned(iteration_temp_4(23 DOWNTO 0) & r2_p(22 DOWNTO 0) &  NOT iteration_temp_4(23));
  r3 <= signed(iteration_temp_5);
  d3 <= d2_p;

  r_reg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r3_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r3_p <= r3;
      END IF;
    END IF;
  END PROCESS r_reg_2_process;


  d_reg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d3_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d3_p <= d3;
      END IF;
    END IF;
  END PROCESS d_reg_2_process;


  -- non Restore iteration stage 4
  iteration_in1_3 <=  - (resize(d3_p, 26));
  
  iteration_y_2 <= d3_p WHEN ( NOT r3_p(47)) = '0' ELSE
      iteration_in1_3(24 DOWNTO 0);
  iteration_add_cast_4 <= signed(r3_p(47 DOWNTO 23));
  iteration_temp_6 <= iteration_add_cast_4 + iteration_y_2;
  iteration_temp_7 <= unsigned(iteration_temp_6(23 DOWNTO 0) & r3_p(22 DOWNTO 0) &  NOT iteration_temp_6(23));
  r4 <= signed(iteration_temp_7);
  d4 <= d3_p;

  r_reg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r4_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r4_p <= r4;
      END IF;
    END IF;
  END PROCESS r_reg_3_process;


  d_reg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d4_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d4_p <= d4;
      END IF;
    END IF;
  END PROCESS d_reg_3_process;


  -- non Restore iteration stage 5
  iteration_in1_4 <=  - (resize(d4_p, 26));
  
  iteration_y_3 <= d4_p WHEN ( NOT r4_p(47)) = '0' ELSE
      iteration_in1_4(24 DOWNTO 0);
  iteration_add_cast_5 <= signed(r4_p(47 DOWNTO 23));
  iteration_temp_8 <= iteration_add_cast_5 + iteration_y_3;
  iteration_temp_9 <= unsigned(iteration_temp_8(23 DOWNTO 0) & r4_p(22 DOWNTO 0) &  NOT iteration_temp_8(23));
  r5 <= signed(iteration_temp_9);
  d5 <= d4_p;

  r_reg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r5_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r5_p <= r5;
      END IF;
    END IF;
  END PROCESS r_reg_4_process;


  d_reg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d5_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d5_p <= d5;
      END IF;
    END IF;
  END PROCESS d_reg_4_process;


  -- non Restore iteration stage 6
  iteration_in1_5 <=  - (resize(d5_p, 26));
  
  iteration_y_4 <= d5_p WHEN ( NOT r5_p(47)) = '0' ELSE
      iteration_in1_5(24 DOWNTO 0);
  iteration_add_cast_6 <= signed(r5_p(47 DOWNTO 23));
  iteration_temp_10 <= iteration_add_cast_6 + iteration_y_4;
  iteration_temp_11 <= unsigned(iteration_temp_10(23 DOWNTO 0) & r5_p(22 DOWNTO 0) &  NOT iteration_temp_10(23));
  r6 <= signed(iteration_temp_11);
  d6 <= d5_p;

  r_reg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r6_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r6_p <= r6;
      END IF;
    END IF;
  END PROCESS r_reg_5_process;


  d_reg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d6_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d6_p <= d6;
      END IF;
    END IF;
  END PROCESS d_reg_5_process;


  -- non Restore iteration stage 7
  iteration_in1_6 <=  - (resize(d6_p, 26));
  
  iteration_y_5 <= d6_p WHEN ( NOT r6_p(47)) = '0' ELSE
      iteration_in1_6(24 DOWNTO 0);
  iteration_add_cast_7 <= signed(r6_p(47 DOWNTO 23));
  iteration_temp_12 <= iteration_add_cast_7 + iteration_y_5;
  iteration_temp_13 <= unsigned(iteration_temp_12(23 DOWNTO 0) & r6_p(22 DOWNTO 0) &  NOT iteration_temp_12(23));
  r7 <= signed(iteration_temp_13);
  d7 <= d6_p;

  r_reg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r7_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r7_p <= r7;
      END IF;
    END IF;
  END PROCESS r_reg_6_process;


  d_reg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d7_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d7_p <= d7;
      END IF;
    END IF;
  END PROCESS d_reg_6_process;


  -- non Restore iteration stage 8
  iteration_in1_7 <=  - (resize(d7_p, 26));
  
  iteration_y_6 <= d7_p WHEN ( NOT r7_p(47)) = '0' ELSE
      iteration_in1_7(24 DOWNTO 0);
  iteration_add_cast_8 <= signed(r7_p(47 DOWNTO 23));
  iteration_temp_14 <= iteration_add_cast_8 + iteration_y_6;
  iteration_temp_15 <= unsigned(iteration_temp_14(23 DOWNTO 0) & r7_p(22 DOWNTO 0) &  NOT iteration_temp_14(23));
  r8 <= signed(iteration_temp_15);
  d8 <= d7_p;

  r_reg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r8_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r8_p <= r8;
      END IF;
    END IF;
  END PROCESS r_reg_7_process;


  d_reg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d8_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d8_p <= d8;
      END IF;
    END IF;
  END PROCESS d_reg_7_process;


  -- non Restore iteration stage 9
  iteration_in1_8 <=  - (resize(d8_p, 26));
  
  iteration_y_7 <= d8_p WHEN ( NOT r8_p(47)) = '0' ELSE
      iteration_in1_8(24 DOWNTO 0);
  iteration_add_cast_9 <= signed(r8_p(47 DOWNTO 23));
  iteration_temp_16 <= iteration_add_cast_9 + iteration_y_7;
  iteration_temp_17 <= unsigned(iteration_temp_16(23 DOWNTO 0) & r8_p(22 DOWNTO 0) &  NOT iteration_temp_16(23));
  r9 <= signed(iteration_temp_17);
  d9 <= d8_p;

  r_reg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r9_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r9_p <= r9;
      END IF;
    END IF;
  END PROCESS r_reg_8_process;


  d_reg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d9_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d9_p <= d9;
      END IF;
    END IF;
  END PROCESS d_reg_8_process;


  -- non Restore iteration stage 10
  iteration_in1_9 <=  - (resize(d9_p, 26));
  
  iteration_y_8 <= d9_p WHEN ( NOT r9_p(47)) = '0' ELSE
      iteration_in1_9(24 DOWNTO 0);
  iteration_add_cast_10 <= signed(r9_p(47 DOWNTO 23));
  iteration_temp_18 <= iteration_add_cast_10 + iteration_y_8;
  iteration_temp_19 <= unsigned(iteration_temp_18(23 DOWNTO 0) & r9_p(22 DOWNTO 0) &  NOT iteration_temp_18(23));
  r10 <= signed(iteration_temp_19);
  d10 <= d9_p;

  r_reg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r10_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r10_p <= r10;
      END IF;
    END IF;
  END PROCESS r_reg_9_process;


  d_reg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d10_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d10_p <= d10;
      END IF;
    END IF;
  END PROCESS d_reg_9_process;


  -- non Restore iteration stage 11
  iteration_in1_10 <=  - (resize(d10_p, 26));
  
  iteration_y_9 <= d10_p WHEN ( NOT r10_p(47)) = '0' ELSE
      iteration_in1_10(24 DOWNTO 0);
  iteration_add_cast_11 <= signed(r10_p(47 DOWNTO 23));
  iteration_temp_20 <= iteration_add_cast_11 + iteration_y_9;
  iteration_temp_21 <= unsigned(iteration_temp_20(23 DOWNTO 0) & r10_p(22 DOWNTO 0) &  NOT iteration_temp_20(23));
  r11 <= signed(iteration_temp_21);
  d11 <= d10_p;

  r_reg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r11_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r11_p <= r11;
      END IF;
    END IF;
  END PROCESS r_reg_10_process;


  d_reg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d11_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d11_p <= d11;
      END IF;
    END IF;
  END PROCESS d_reg_10_process;


  -- non Restore iteration stage 12
  iteration_in1_11 <=  - (resize(d11_p, 26));
  
  iteration_y_10 <= d11_p WHEN ( NOT r11_p(47)) = '0' ELSE
      iteration_in1_11(24 DOWNTO 0);
  iteration_add_cast_12 <= signed(r11_p(47 DOWNTO 23));
  iteration_temp_22 <= iteration_add_cast_12 + iteration_y_10;
  iteration_temp_23 <= unsigned(iteration_temp_22(23 DOWNTO 0) & r11_p(22 DOWNTO 0) &  NOT iteration_temp_22(23));
  r12 <= signed(iteration_temp_23);
  d12 <= d11_p;

  r_reg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r12_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r12_p <= r12;
      END IF;
    END IF;
  END PROCESS r_reg_11_process;


  d_reg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d12_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d12_p <= d12;
      END IF;
    END IF;
  END PROCESS d_reg_11_process;


  -- non Restore iteration stage 13
  iteration_in1_12 <=  - (resize(d12_p, 26));
  
  iteration_y_11 <= d12_p WHEN ( NOT r12_p(47)) = '0' ELSE
      iteration_in1_12(24 DOWNTO 0);
  iteration_add_cast_13 <= signed(r12_p(47 DOWNTO 23));
  iteration_temp_24 <= iteration_add_cast_13 + iteration_y_11;
  iteration_temp_25 <= unsigned(iteration_temp_24(23 DOWNTO 0) & r12_p(22 DOWNTO 0) &  NOT iteration_temp_24(23));
  r13 <= signed(iteration_temp_25);
  d13 <= d12_p;

  r_reg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r13_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r13_p <= r13;
      END IF;
    END IF;
  END PROCESS r_reg_12_process;


  d_reg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d13_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d13_p <= d13;
      END IF;
    END IF;
  END PROCESS d_reg_12_process;


  -- non Restore iteration stage 14
  iteration_in1_13 <=  - (resize(d13_p, 26));
  
  iteration_y_12 <= d13_p WHEN ( NOT r13_p(47)) = '0' ELSE
      iteration_in1_13(24 DOWNTO 0);
  iteration_add_cast_14 <= signed(r13_p(47 DOWNTO 23));
  iteration_temp_26 <= iteration_add_cast_14 + iteration_y_12;
  iteration_temp_27 <= unsigned(iteration_temp_26(23 DOWNTO 0) & r13_p(22 DOWNTO 0) &  NOT iteration_temp_26(23));
  r14 <= signed(iteration_temp_27);
  d14 <= d13_p;

  r_reg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r14_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r14_p <= r14;
      END IF;
    END IF;
  END PROCESS r_reg_13_process;


  d_reg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d14_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d14_p <= d14;
      END IF;
    END IF;
  END PROCESS d_reg_13_process;


  -- non Restore iteration stage 15
  iteration_in1_14 <=  - (resize(d14_p, 26));
  
  iteration_y_13 <= d14_p WHEN ( NOT r14_p(47)) = '0' ELSE
      iteration_in1_14(24 DOWNTO 0);
  iteration_add_cast_15 <= signed(r14_p(47 DOWNTO 23));
  iteration_temp_28 <= iteration_add_cast_15 + iteration_y_13;
  iteration_temp_29 <= unsigned(iteration_temp_28(23 DOWNTO 0) & r14_p(22 DOWNTO 0) &  NOT iteration_temp_28(23));
  r15 <= signed(iteration_temp_29);
  d15 <= d14_p;

  r_reg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r15_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r15_p <= r15;
      END IF;
    END IF;
  END PROCESS r_reg_14_process;


  d_reg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d15_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d15_p <= d15;
      END IF;
    END IF;
  END PROCESS d_reg_14_process;


  -- non Restore iteration stage 16
  iteration_in1_15 <=  - (resize(d15_p, 26));
  
  iteration_y_14 <= d15_p WHEN ( NOT r15_p(47)) = '0' ELSE
      iteration_in1_15(24 DOWNTO 0);
  iteration_add_cast_16 <= signed(r15_p(47 DOWNTO 23));
  iteration_temp_30 <= iteration_add_cast_16 + iteration_y_14;
  iteration_temp_31 <= unsigned(iteration_temp_30(23 DOWNTO 0) & r15_p(22 DOWNTO 0) &  NOT iteration_temp_30(23));
  r16 <= signed(iteration_temp_31);
  d16 <= d15_p;

  r_reg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r16_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r16_p <= r16;
      END IF;
    END IF;
  END PROCESS r_reg_15_process;


  d_reg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d16_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d16_p <= d16;
      END IF;
    END IF;
  END PROCESS d_reg_15_process;


  -- non Restore iteration stage 17
  iteration_in1_16 <=  - (resize(d16_p, 26));
  
  iteration_y_15 <= d16_p WHEN ( NOT r16_p(47)) = '0' ELSE
      iteration_in1_16(24 DOWNTO 0);
  iteration_add_cast_17 <= signed(r16_p(47 DOWNTO 23));
  iteration_temp_32 <= iteration_add_cast_17 + iteration_y_15;
  iteration_temp_33 <= unsigned(iteration_temp_32(23 DOWNTO 0) & r16_p(22 DOWNTO 0) &  NOT iteration_temp_32(23));
  r17 <= signed(iteration_temp_33);
  d17 <= d16_p;

  r_reg_16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r17_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r17_p <= r17;
      END IF;
    END IF;
  END PROCESS r_reg_16_process;


  d_reg_16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d17_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d17_p <= d17;
      END IF;
    END IF;
  END PROCESS d_reg_16_process;


  -- non Restore iteration stage 18
  iteration_in1_17 <=  - (resize(d17_p, 26));
  
  iteration_y_16 <= d17_p WHEN ( NOT r17_p(47)) = '0' ELSE
      iteration_in1_17(24 DOWNTO 0);
  iteration_add_cast_18 <= signed(r17_p(47 DOWNTO 23));
  iteration_temp_34 <= iteration_add_cast_18 + iteration_y_16;
  iteration_temp_35 <= unsigned(iteration_temp_34(23 DOWNTO 0) & r17_p(22 DOWNTO 0) &  NOT iteration_temp_34(23));
  r18 <= signed(iteration_temp_35);
  d18 <= d17_p;

  r_reg_17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r18_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r18_p <= r18;
      END IF;
    END IF;
  END PROCESS r_reg_17_process;


  d_reg_17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d18_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d18_p <= d18;
      END IF;
    END IF;
  END PROCESS d_reg_17_process;


  -- non Restore iteration stage 19
  iteration_in1_18 <=  - (resize(d18_p, 26));
  
  iteration_y_17 <= d18_p WHEN ( NOT r18_p(47)) = '0' ELSE
      iteration_in1_18(24 DOWNTO 0);
  iteration_add_cast_19 <= signed(r18_p(47 DOWNTO 23));
  iteration_temp_36 <= iteration_add_cast_19 + iteration_y_17;
  iteration_temp_37 <= unsigned(iteration_temp_36(23 DOWNTO 0) & r18_p(22 DOWNTO 0) &  NOT iteration_temp_36(23));
  r19 <= signed(iteration_temp_37);
  d19 <= d18_p;

  r_reg_18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r19_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r19_p <= r19;
      END IF;
    END IF;
  END PROCESS r_reg_18_process;


  d_reg_18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d19_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d19_p <= d19;
      END IF;
    END IF;
  END PROCESS d_reg_18_process;


  -- non Restore iteration stage 20
  iteration_in1_19 <=  - (resize(d19_p, 26));
  
  iteration_y_18 <= d19_p WHEN ( NOT r19_p(47)) = '0' ELSE
      iteration_in1_19(24 DOWNTO 0);
  iteration_add_cast_20 <= signed(r19_p(47 DOWNTO 23));
  iteration_temp_38 <= iteration_add_cast_20 + iteration_y_18;
  iteration_temp_39 <= unsigned(iteration_temp_38(23 DOWNTO 0) & r19_p(22 DOWNTO 0) &  NOT iteration_temp_38(23));
  r20 <= signed(iteration_temp_39);
  d20 <= d19_p;

  r_reg_19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r20_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r20_p <= r20;
      END IF;
    END IF;
  END PROCESS r_reg_19_process;


  d_reg_19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d20_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d20_p <= d20;
      END IF;
    END IF;
  END PROCESS d_reg_19_process;


  -- non Restore iteration stage 21
  iteration_in1_20 <=  - (resize(d20_p, 26));
  
  iteration_y_19 <= d20_p WHEN ( NOT r20_p(47)) = '0' ELSE
      iteration_in1_20(24 DOWNTO 0);
  iteration_add_cast_21 <= signed(r20_p(47 DOWNTO 23));
  iteration_temp_40 <= iteration_add_cast_21 + iteration_y_19;
  iteration_temp_41 <= unsigned(iteration_temp_40(23 DOWNTO 0) & r20_p(22 DOWNTO 0) &  NOT iteration_temp_40(23));
  r21 <= signed(iteration_temp_41);
  d21 <= d20_p;

  r_reg_20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r21_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r21_p <= r21;
      END IF;
    END IF;
  END PROCESS r_reg_20_process;


  d_reg_20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d21_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d21_p <= d21;
      END IF;
    END IF;
  END PROCESS d_reg_20_process;


  -- non Restore iteration stage 22
  iteration_in1_21 <=  - (resize(d21_p, 26));
  
  iteration_y_20 <= d21_p WHEN ( NOT r21_p(47)) = '0' ELSE
      iteration_in1_21(24 DOWNTO 0);
  iteration_add_cast_22 <= signed(r21_p(47 DOWNTO 23));
  iteration_temp_42 <= iteration_add_cast_22 + iteration_y_20;
  iteration_temp_43 <= unsigned(iteration_temp_42(23 DOWNTO 0) & r21_p(22 DOWNTO 0) &  NOT iteration_temp_42(23));
  r22 <= signed(iteration_temp_43);
  d22 <= d21_p;

  r_reg_21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r22_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r22_p <= r22;
      END IF;
    END IF;
  END PROCESS r_reg_21_process;


  d_reg_21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d22_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d22_p <= d22;
      END IF;
    END IF;
  END PROCESS d_reg_21_process;


  -- non Restore iteration stage 23
  iteration_in1_22 <=  - (resize(d22_p, 26));
  
  iteration_y_21 <= d22_p WHEN ( NOT r22_p(47)) = '0' ELSE
      iteration_in1_22(24 DOWNTO 0);
  iteration_add_cast_23 <= signed(r22_p(47 DOWNTO 23));
  iteration_temp_44 <= iteration_add_cast_23 + iteration_y_21;
  iteration_temp_45 <= unsigned(iteration_temp_44(23 DOWNTO 0) & r22_p(22 DOWNTO 0) &  NOT iteration_temp_44(23));
  r23 <= signed(iteration_temp_45);
  d23 <= d22_p;

  r_reg_22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r23_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r23_p <= r23;
      END IF;
    END IF;
  END PROCESS r_reg_22_process;


  d_reg_22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      d23_p <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        d23_p <= d23;
      END IF;
    END IF;
  END PROCESS d_reg_22_process;


  -- non Restore iteration stage 24
  iteration_in1_23 <=  - (resize(d23_p, 26));
  
  iteration_y_22 <= d23_p WHEN ( NOT r23_p(47)) = '0' ELSE
      iteration_in1_23(24 DOWNTO 0);
  iteration_add_cast_24 <= signed(r23_p(47 DOWNTO 23));
  iteration_temp_46 <= iteration_add_cast_24 + iteration_y_22;
  iteration_temp_47 <= unsigned(iteration_temp_46(23 DOWNTO 0) & r23_p(22 DOWNTO 0) &  NOT iteration_temp_46(23));
  r24 <= signed(iteration_temp_47);
  d24 <= d23_p;

  r_reg_23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      r24_p <= to_signed(0, 48);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        r24_p <= r24;
      END IF;
    END IF;
  END PROCESS r_reg_23_process;


  qTemp <= unsigned(r24_p(23 DOWNTO 0));

  qtempExt <= signed(resize(qTemp, 25));

  qtempExt_p_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      qtempExt_p_1 <= to_signed(16#0000000#, 25);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        qtempExt_p_1 <= qtempExt;
      END IF;
    END IF;
  END PROCESS qtempExt_p_process;


  signFlag_p_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      signFlag_p_reg(0) <= '0';
      signFlag_p_reg(1) <= '0';
      signFlag_p_reg(2) <= '0';
      signFlag_p_reg(3) <= '0';
      signFlag_p_reg(4) <= '0';
      signFlag_p_reg(5) <= '0';
      signFlag_p_reg(6) <= '0';
      signFlag_p_reg(7) <= '0';
      signFlag_p_reg(8) <= '0';
      signFlag_p_reg(9) <= '0';
      signFlag_p_reg(10) <= '0';
      signFlag_p_reg(11) <= '0';
      signFlag_p_reg(12) <= '0';
      signFlag_p_reg(13) <= '0';
      signFlag_p_reg(14) <= '0';
      signFlag_p_reg(15) <= '0';
      signFlag_p_reg(16) <= '0';
      signFlag_p_reg(17) <= '0';
      signFlag_p_reg(18) <= '0';
      signFlag_p_reg(19) <= '0';
      signFlag_p_reg(20) <= '0';
      signFlag_p_reg(21) <= '0';
      signFlag_p_reg(22) <= '0';
      signFlag_p_reg(23) <= '0';
      signFlag_p_reg(24) <= '0';
      signFlag_p_reg(25) <= '0';
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        signFlag_p_reg(0) <= signFlag_p_reg_next(0);
        signFlag_p_reg(1) <= signFlag_p_reg_next(1);
        signFlag_p_reg(2) <= signFlag_p_reg_next(2);
        signFlag_p_reg(3) <= signFlag_p_reg_next(3);
        signFlag_p_reg(4) <= signFlag_p_reg_next(4);
        signFlag_p_reg(5) <= signFlag_p_reg_next(5);
        signFlag_p_reg(6) <= signFlag_p_reg_next(6);
        signFlag_p_reg(7) <= signFlag_p_reg_next(7);
        signFlag_p_reg(8) <= signFlag_p_reg_next(8);
        signFlag_p_reg(9) <= signFlag_p_reg_next(9);
        signFlag_p_reg(10) <= signFlag_p_reg_next(10);
        signFlag_p_reg(11) <= signFlag_p_reg_next(11);
        signFlag_p_reg(12) <= signFlag_p_reg_next(12);
        signFlag_p_reg(13) <= signFlag_p_reg_next(13);
        signFlag_p_reg(14) <= signFlag_p_reg_next(14);
        signFlag_p_reg(15) <= signFlag_p_reg_next(15);
        signFlag_p_reg(16) <= signFlag_p_reg_next(16);
        signFlag_p_reg(17) <= signFlag_p_reg_next(17);
        signFlag_p_reg(18) <= signFlag_p_reg_next(18);
        signFlag_p_reg(19) <= signFlag_p_reg_next(19);
        signFlag_p_reg(20) <= signFlag_p_reg_next(20);
        signFlag_p_reg(21) <= signFlag_p_reg_next(21);
        signFlag_p_reg(22) <= signFlag_p_reg_next(22);
        signFlag_p_reg(23) <= signFlag_p_reg_next(23);
        signFlag_p_reg(24) <= signFlag_p_reg_next(24);
        signFlag_p_reg(25) <= signFlag_p_reg_next(25);
      END IF;
    END IF;
  END PROCESS signFlag_p_process;

  signFlag_p_1 <= signFlag_p_reg(25);
  signFlag_p_reg_next(0) <= Rin_MSB;
  signFlag_p_reg_next(1) <= signFlag_p_reg(0);
  signFlag_p_reg_next(2) <= signFlag_p_reg(1);
  signFlag_p_reg_next(3) <= signFlag_p_reg(2);
  signFlag_p_reg_next(4) <= signFlag_p_reg(3);
  signFlag_p_reg_next(5) <= signFlag_p_reg(4);
  signFlag_p_reg_next(6) <= signFlag_p_reg(5);
  signFlag_p_reg_next(7) <= signFlag_p_reg(6);
  signFlag_p_reg_next(8) <= signFlag_p_reg(7);
  signFlag_p_reg_next(9) <= signFlag_p_reg(8);
  signFlag_p_reg_next(10) <= signFlag_p_reg(9);
  signFlag_p_reg_next(11) <= signFlag_p_reg(10);
  signFlag_p_reg_next(12) <= signFlag_p_reg(11);
  signFlag_p_reg_next(13) <= signFlag_p_reg(12);
  signFlag_p_reg_next(14) <= signFlag_p_reg(13);
  signFlag_p_reg_next(15) <= signFlag_p_reg(14);
  signFlag_p_reg_next(16) <= signFlag_p_reg(15);
  signFlag_p_reg_next(17) <= signFlag_p_reg(16);
  signFlag_p_reg_next(18) <= signFlag_p_reg(17);
  signFlag_p_reg_next(19) <= signFlag_p_reg(18);
  signFlag_p_reg_next(20) <= signFlag_p_reg(19);
  signFlag_p_reg_next(21) <= signFlag_p_reg(20);
  signFlag_p_reg_next(22) <= signFlag_p_reg(21);
  signFlag_p_reg_next(23) <= signFlag_p_reg(22);
  signFlag_p_reg_next(24) <= signFlag_p_reg(23);
  signFlag_p_reg_next(25) <= signFlag_p_reg(24);

  postcorrection_in0 <=  - (resize(qtempExt_p_1, 26));
  
  postcorrection_qtemp <= postcorrection_in0(24 DOWNTO 0) WHEN signFlag_p_1 = '1' ELSE
      qtempExt_p_1;
  postcorrection_sel <= unsigned'(postcorrection_qtemp(24) & postcorrection_qtemp(23));
  
  qtempPost <= to_signed(16#7FFFFF#, 24) WHEN postcorrection_sel = to_unsigned(16#1#, 2) ELSE
      to_signed(-16#800000#, 24) WHEN postcorrection_sel = to_unsigned(16#2#, 2) ELSE
      postcorrection_qtemp(23 DOWNTO 0);

  ConstantSignal_1 <= to_signed(16#000000#, 24);

  
  qtempPost_1 <= qtempPost WHEN Relational_Operator_relop1 = '0' ELSE
      ConstantSignal_1;

  qtempPost_2 <= qtempPost_1;

  q_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      recip_out_tmp <= to_signed(16#000000#, 24);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        recip_out_tmp <= qtempPost_2;
      END IF;
    END IF;
  END PROCESS q_process;


  recip_out <= std_logic_vector(recip_out_tmp);

END rtl;

