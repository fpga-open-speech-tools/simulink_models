open_system('noise_suppression');
open_system('gm_noise_suppression');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Reciprocal2', 'user1');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Reciprocal2', 0, 1, 'Different sample time at inputs and outputs');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/reciprocal', 'user1');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/reciprocal', 0, 1, 'Different sample time at inputs and outputs');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Reciprocal2', 'user1');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Reciprocal2', 0, 1, 'Different sample time at inputs and outputs');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Reciprocal1', 'user1');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Reciprocal1', 0, 1, 'Different sample time at inputs and outputs');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/reciprocal1', 'user1');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/reciprocal1', 0, 1, 'Different sample time at inputs and outputs');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Reciprocal1', 'user1');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Reciprocal1', 0, 1, 'Different sample time at inputs and outputs');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed', 'user1');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed', 0, 1, 'Statically scheduled subsystem');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed1', 'user1');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed1', 0, 1, 'Statically scheduled subsystem');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/compute statistics/Delay1', 'user1');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/compute statistics/Delay1', 0, 1, 'Different sample time at inputs and outputs');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/compute statistics/Delay1', 'user1');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/compute statistics/Delay1', 0, 1, 'Different sample time at inputs and outputs');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/compute statistics/Delay4', 'user1');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/compute statistics/Delay4', 0, 1, 'Different sample time at inputs and outputs');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/compute statistics/Delay4', 'user1');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/compute statistics/Delay4', 0, 1, 'Different sample time at inputs and outputs');
