open_system('gm_noise_suppression');
open_system('noise_suppression');
clearhighlighting;
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/compute statistics', 'user1');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/compute statistics', 0, 1, 'Unsupported block');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/compute statistics', 'user1');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/compute statistics', 0, 1, 'Unsupported block');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'yellow';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed/Add2', 'user1');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed/Add2', 0, 1, 'Streaming Group 1');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Add2', 'user1');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Add2', 0, 1, 'Streaming Group 1');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'yellow';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed/Data Type Conversion3', 'user1');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed/Data Type Conversion3', 0, 1, 'Streaming Group 1');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Data Type Conversion3', 'user1');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Data Type Conversion3', 0, 1, 'Streaming Group 1');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'yellow';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed/Add', 'user1');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed/Add', 0, 1, 'Streaming Group 1');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Add', 'user1');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Add', 0, 1, 'Streaming Group 1');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'yellow';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed/Data Type Conversion2', 'user1');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed/Data Type Conversion2', 0, 1, 'Streaming Group 1');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Data Type Conversion2', 'user1');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Data Type Conversion2', 0, 1, 'Streaming Group 1');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'yellow';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed', 'user1');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed', 0, 1, 'Streaming Group 1');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'red';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed1/Switch', 'user2');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed1/Switch', 0, 1, 'Streaming Group 2');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Switch', 'user2');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Switch', 0, 1, 'Streaming Group 2');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'red';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed1/Product', 'user2');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed1/Product', 0, 1, 'Streaming Group 2');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Product', 'user2');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Product', 0, 1, 'Streaming Group 2');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'red';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed1/Data Type Conversion', 'user2');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed1/Data Type Conversion', 0, 1, 'Streaming Group 2');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Data Type Conversion', 'user2');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Data Type Conversion', 0, 1, 'Streaming Group 2');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'red';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed1/Add1', 'user2');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed1/Add1', 0, 1, 'Streaming Group 2');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Add1', 'user2');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Add1', 0, 1, 'Streaming Group 2');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'red';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed1/Product1', 'user2');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed1/Product1', 0, 1, 'Streaming Group 2');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Product1', 'user2');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Product1', 0, 1, 'Streaming Group 2');
cs.HiliteType = 'user2';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'red';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed1', 'user2');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/streaming_partition_streamed1', 0, 1, 'Streaming Group 2');
cs.HiliteType = 'user1';
cs.ForegroundColor = 'black';
cs.BackgroundColor = 'cyan';
set_param(0, 'HiliteAncestorsData', cs);
hilite_system('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/mux', 'user1');
annotate_port('gm_noise_suppression/dataplane/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/mux', 0, 1, 'Unsupported block');
hilite_system('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Mux', 'user1');
annotate_port('noise_suppression/dataplane/Adaptive_Wiener_Filter Sample Based Filtering/Mux', 0, 1, 'Unsupported block');
